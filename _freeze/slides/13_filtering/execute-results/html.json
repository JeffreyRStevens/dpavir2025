{
  "hash": "96a1141de9a56a37717b778a53d01349",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Filtering rows\"\nauthor: \"Jeff Stevens\"\ndate: \"2023-02-20\"\ndate-format: iso\nexecute:\n  echo: true\n  freeze: true\nformat:\n  revealjs: \n    theme: custom.scss\n    slide-number: true\n    code-line-numbers: false\n    highlight-style: github\n    code-overflow: wrap\n    footer: \"[DPaViR 2023](https://jeffreyrstevens.quarto.pub/dpavir)\"\n    code-link: true\n---\n\n\n\n\n\n# Review\n\n## The problem\n\n\n\n\n::: {.cell resuts='false'}\n\n:::\n\n\n\n\nWhat's different between these data sets? What can we use to create `data2` from `data1`?\n\n::::{.columns}\n:::{.column width=\"40%}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  cond id       date\n1    1  1 2022-02-19\n2    3  2 2022-02-02\n3    1  3 2022-01-27\n4    1  4 2022-01-30\n5    3  5 2022-02-09\n6    1  6 2022-01-18\n7    2  7 2022-02-24\n8    3  8 2022-02-05\n```\n\n\n:::\n:::\n\n\n\n:::\n:::{.column width=\"40%}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n         cond id    month       date\n1 Condition 1  1 February 2022-02-19\n2 Condition 3  2 February 2022-02-02\n3 Condition 1  3  January 2022-01-27\n4 Condition 1  4  January 2022-01-30\n5 Condition 3  5 February 2022-02-09\n6 Condition 1  6  January 2022-01-18\n7 Condition 2  7 February 2022-02-24\n8 Condition 3  8 February 2022-02-05\n```\n\n\n:::\n:::\n\n\n\n:::\n::::\n\n\n## The problem\n\nWhat's different between these data sets? What can we use to create `data3` from `data1`?\n\n::::{.columns}\n:::{.column width=\"40%}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  cond id       date\n1    1  1 2022-02-19\n2    3  2 2022-02-02\n3    1  3 2022-01-27\n4    1  4 2022-01-30\n5    3  5 2022-02-09\n6    1  6 2022-01-18\n7    2  7 2022-02-24\n8    3  8 2022-02-05\n```\n\n\n:::\n:::\n\n\n\n:::\n:::{.column width=\"40%}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata3\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  id cond\n1  1    1\n2  2    3\n3  3    1\n4  4    1\n5  5    3\n6  6    1\n7  7    2\n8  8    3\n```\n\n\n:::\n:::\n\n\n\n:::\n::::\n\n\n## The problem\n\nWhat's different between these data sets? What needs to happen to create `data4` from `data1`?\n\n::::{.columns}\n:::{.column width=\"40%}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  cond id       date\n1    1  1 2022-02-19\n2    3  2 2022-02-02\n3    1  3 2022-01-27\n4    1  4 2022-01-30\n5    3  5 2022-02-09\n6    1  6 2022-01-18\n7    2  7 2022-02-24\n8    3  8 2022-02-05\n```\n\n\n:::\n:::\n\n\n\n:::\n:::{.column width=\"40%}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata4\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  cond id       date\n1    1  6 2022-01-18\n2    1  3 2022-01-27\n3    1  4 2022-01-30\n4    1  1 2022-02-19\n5    2  7 2022-02-24\n```\n\n\n:::\n:::\n\n\n\n:::\n::::\n\n\n## Data wrangling\n\n![](../images/dplyr_summary.png){fig-align=center width=80%}\n\n\n## Set-up\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\nlibrary(nycflights13)\n(flights2 <- select(flights, year:dep_delay, air_time))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 336,776 × 7\n    year month   day dep_time sched_dep_time dep_delay air_time\n   <int> <int> <int>    <int>          <int>     <dbl>    <dbl>\n 1  2013     1     1      517            515         2      227\n 2  2013     1     1      533            529         4      227\n 3  2013     1     1      542            540         2      160\n 4  2013     1     1      544            545        -1      183\n 5  2013     1     1      554            600        -6      116\n 6  2013     1     1      554            558        -4      150\n 7  2013     1     1      555            600        -5      158\n 8  2013     1     1      557            600        -3       53\n 9  2013     1     1      557            600        -3      140\n10  2013     1     1      558            600        -2      138\n# ℹ 336,766 more rows\n```\n\n\n:::\n:::\n\n\n\n\n\n# Filtering rows\n\n## `filter()`\n\n![](../images/dplyr_filter.png){fig-align=\"center\" height=45%}\n\n---\n\n## `filter()`\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfilter(flights2, dep_time == sched_dep_time)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 16,514 × 7\n    year month   day dep_time sched_dep_time dep_delay air_time\n   <int> <int> <int>    <int>          <int>     <dbl>    <dbl>\n 1  2013     1     1      559            559         0       44\n 2  2013     1     1      600            600         0      152\n 3  2013     1     1      600            600         0      134\n 4  2013     1     1      607            607         0      157\n 5  2013     1     1      615            615         0      182\n 6  2013     1     1      615            615         0      120\n 7  2013     1     1      635            635         0      248\n 8  2013     1     1      655            655         0      294\n 9  2013     1     1      739            739         0      249\n10  2013     1     1      745            745         0      378\n# ℹ 16,504 more rows\n```\n\n\n:::\n:::\n\n\n\n\n---\n\n## `filter()`\n\n### Multiple conditions\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfilter(flights2, dep_delay < 0 & month == 2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 13,397 × 7\n    year month   day dep_time sched_dep_time dep_delay air_time\n   <int> <int> <int>    <int>          <int>     <dbl>    <dbl>\n 1  2013     2     1      456            500        -4       98\n 2  2013     2     1      520            525        -5      209\n 3  2013     2     1      527            530        -3      233\n 4  2013     2     1      532            540        -8      195\n 5  2013     2     1      552            600        -8       58\n 6  2013     2     1      552            600        -8      227\n 7  2013     2     1      552            600        -8       42\n 8  2013     2     1      553            600        -7      134\n 9  2013     2     1      553            600        -7      125\n10  2013     2     1      553            600        -7       49\n# ℹ 13,387 more rows\n```\n\n\n:::\n:::\n\n\n\n\n---\n\n## `filter()`\n\n### Logical OR\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfilter(flights2, month == 11 | month == 12)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 55,403 × 7\n    year month   day dep_time sched_dep_time dep_delay air_time\n   <int> <int> <int>    <int>          <int>     <dbl>    <dbl>\n 1  2013    11     1        5           2359         6      205\n 2  2013    11     1       35           2250       105       36\n 3  2013    11     1      455            500        -5       88\n 4  2013    11     1      539            545        -6      229\n 5  2013    11     1      542            545        -3      147\n 6  2013    11     1      549            600       -11      359\n 7  2013    11     1      550            600       -10       57\n 8  2013    11     1      554            600        -6       40\n 9  2013    11     1      554            600        -6      126\n10  2013    11     1      554            600        -6       93\n# ℹ 55,393 more rows\n```\n\n\n:::\n:::\n\n\n\n\n---\n\n## `filter()`\n\n### Logical %in%\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfilter(flights2, month %in% c(11, 12))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 55,403 × 7\n    year month   day dep_time sched_dep_time dep_delay air_time\n   <int> <int> <int>    <int>          <int>     <dbl>    <dbl>\n 1  2013    11     1        5           2359         6      205\n 2  2013    11     1       35           2250       105       36\n 3  2013    11     1      455            500        -5       88\n 4  2013    11     1      539            545        -6      229\n 5  2013    11     1      542            545        -3      147\n 6  2013    11     1      549            600       -11      359\n 7  2013    11     1      550            600       -10       57\n 8  2013    11     1      554            600        -6       40\n 9  2013    11     1      554            600        -6      126\n10  2013    11     1      554            600        -6       93\n# ℹ 55,393 more rows\n```\n\n\n:::\n:::\n\n\n\n\n---\n\n## `filter()`\n\n### Negating conditional\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfilter(flights2, month != 1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 309,772 × 7\n    year month   day dep_time sched_dep_time dep_delay air_time\n   <int> <int> <int>    <int>          <int>     <dbl>    <dbl>\n 1  2013    10     1      447            500       -13       69\n 2  2013    10     1      522            517         5      174\n 3  2013    10     1      536            545        -9      132\n 4  2013    10     1      539            545        -6      172\n 5  2013    10     1      539            545        -6      186\n 6  2013    10     1      544            550        -6      191\n 7  2013    10     1      549            600       -11       46\n 8  2013    10     1      550            600       -10       38\n 9  2013    10     1      550            600       -10       39\n10  2013    10     1      551            600        -9      117\n# ℹ 309,762 more rows\n```\n\n\n:::\n:::\n\n\n\n\n---\n\n## `filter()`\n\n### Negating multiple conditionals\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfilter(flights2, month != 1 & day != 1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 299,578 × 7\n    year month   day dep_time sched_dep_time dep_delay air_time\n   <int> <int> <int>    <int>          <int>     <dbl>    <dbl>\n 1  2013    10     2      449            500       -11       73\n 2  2013    10     2      513            517        -4      180\n 3  2013    10     2      537            545        -8      190\n 4  2013    10     2      540            545        -5      181\n 5  2013    10     2      543            545        -2      134\n 6  2013    10     2      546            550        -4      192\n 7  2013    10     2      548            600       -12       48\n 8  2013    10     2      548            600       -12       42\n 9  2013    10     2      550            600       -10       32\n10  2013    10     2      552            600        -8       40\n# ℹ 299,568 more rows\n```\n\n\n:::\n:::\n\n\n\n\n---\n\n## `filter()`\n\n### Check if `NA` with `is.na()`\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfilter(flights2, is.na(dep_time))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 8,255 × 7\n    year month   day dep_time sched_dep_time dep_delay air_time\n   <int> <int> <int>    <int>          <int>     <dbl>    <dbl>\n 1  2013     1     1       NA           1630        NA       NA\n 2  2013     1     1       NA           1935        NA       NA\n 3  2013     1     1       NA           1500        NA       NA\n 4  2013     1     1       NA            600        NA       NA\n 5  2013     1     2       NA           1540        NA       NA\n 6  2013     1     2       NA           1620        NA       NA\n 7  2013     1     2       NA           1355        NA       NA\n 8  2013     1     2       NA           1420        NA       NA\n 9  2013     1     2       NA           1321        NA       NA\n10  2013     1     2       NA           1545        NA       NA\n# ℹ 8,245 more rows\n```\n\n\n:::\n:::\n\n\n\n\n\n## `filter()`\n\n### Check if `NA` across multiple columns with `is.na()` and `if_any()`\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfilter(flights2, if_any(everything(), is.na))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 9,430 × 7\n    year month   day dep_time sched_dep_time dep_delay air_time\n   <int> <int> <int>    <int>          <int>     <dbl>    <dbl>\n 1  2013     1     1     1525           1530        -5       NA\n 2  2013     1     1     1528           1459        29       NA\n 3  2013     1     1     1740           1745        -5       NA\n 4  2013     1     1     1807           1738        29       NA\n 5  2013     1     1     1939           1840        59       NA\n 6  2013     1     1     1952           1930        22       NA\n 7  2013     1     1     2016           1930        46       NA\n 8  2013     1     1       NA           1630        NA       NA\n 9  2013     1     1       NA           1935        NA       NA\n10  2013     1     1       NA           1500        NA       NA\n# ℹ 9,420 more rows\n```\n\n\n:::\n:::\n\n\n\n\n\n## `drop_na()`\n\n### Filter column with **any** `NA`s with `drop_na()`\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnrow(flights2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 336776\n```\n\n\n:::\n\n```{.r .cell-code}\nnrow(drop_na(flights2))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 327346\n```\n\n\n:::\n:::\n\n\n\n\n:::{.fragment}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnrow(drop_na(flights, dep_time))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 328521\n```\n\n\n:::\n:::\n\n\n\n:::\n\n\n\n# Sorting rows\n\n## `arrange()`\n\n![](../images/dplyr_arrange.png){fig-align=\"center\" height=45%}\n\n\n---\n\n## `arrange()`\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\narrange(flights2, sched_dep_time)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 336,776 × 7\n    year month   day dep_time sched_dep_time dep_delay air_time\n   <int> <int> <int>    <int>          <int>     <dbl>    <dbl>\n 1  2013     7    27       NA            106        NA       NA\n 2  2013     1     2      458            500        -2      108\n 3  2013     1     3      458            500        -2       94\n 4  2013     1     4      456            500        -4       77\n 5  2013     1     5      458            500        -2       85\n 6  2013     1     6      458            500        -2       88\n 7  2013     1     7      454            500        -6       86\n 8  2013     1     8      454            500        -6       77\n 9  2013     1     9      457            500        -3       87\n10  2013     1    10      450            500       -10       78\n# ℹ 336,766 more rows\n```\n\n\n:::\n:::\n\n\n\n\n---\n\n## `arrange()`\n\n### Sort multiple rows\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\narrange(flights2, sched_dep_time, dep_time)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 336,776 × 7\n    year month   day dep_time sched_dep_time dep_delay air_time\n   <int> <int> <int>    <int>          <int>     <dbl>    <dbl>\n 1  2013     7    27       NA            106        NA       NA\n 2  2013     5     8      445            500       -15       78\n 3  2013     5     5      446            500       -14       90\n 4  2013     9     4      446            500       -14       79\n 5  2013    10     1      447            500       -13       69\n 6  2013     9    19      447            500       -13       81\n 7  2013     1    29      448            500       -12       88\n 8  2013    12    27      448            500       -12       92\n 9  2013     5     7      448            500       -12       80\n10  2013    10     2      449            500       -11       73\n# ℹ 336,766 more rows\n```\n\n\n:::\n:::\n\n\n\n\n\n---\n\n## `arrange()`\n\n### Sort in descending order\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\narrange(flights2, desc(dep_time))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 336,776 × 7\n    year month   day dep_time sched_dep_time dep_delay air_time\n   <int> <int> <int>    <int>          <int>     <dbl>    <dbl>\n 1  2013    10    30     2400           2359         1      182\n 2  2013    11    27     2400           2359         1      230\n 3  2013    12     5     2400           2359         1      182\n 4  2013    12     9     2400           2359         1      195\n 5  2013    12     9     2400           2250        70       41\n 6  2013    12    13     2400           2359         1      192\n 7  2013    12    19     2400           2359         1      193\n 8  2013    12    29     2400           1700       420      161\n 9  2013     2     7     2400           2359         1      186\n10  2013     2     7     2400           2359         1      194\n# ℹ 336,766 more rows\n```\n\n\n:::\n:::\n\n\n\n\n\n## Solving the problem\n\nWhat code turns `data1` into `data4`?\n\n::::{.columns}\n:::{.column width=\"40%}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  cond id       date\n1    1  1 2022-02-19\n2    3  2 2022-02-02\n3    1  3 2022-01-27\n4    1  4 2022-01-30\n5    3  5 2022-02-09\n6    1  6 2022-01-18\n7    2  7 2022-02-24\n8    3  8 2022-02-05\n```\n\n\n:::\n:::\n\n\n\n:::\n:::{.column width=\"40%}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata4\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  cond id       date\n1    1  6 2022-01-18\n2    1  3 2022-01-27\n3    1  4 2022-01-30\n4    1  1 2022-02-19\n5    2  7 2022-02-24\n```\n\n\n:::\n:::\n\n\n\n:::\n::::\n\n\n## Let's code!\n\n[Filtering rows](../code/13_filtering.html){target=\"_blank\"} [[Rmd](../code/13_filtering.Rmd){target=\"_blank\"}]\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}