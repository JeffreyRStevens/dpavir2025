{
  "hash": "fe8f38bce6eadbfd0638e7cb9e738c8c",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Grammar of graphics\"\nauthor: \"Jeff Stevens\"\ndate: \"2023-03-31\"\ndate-format: iso\nexecute:\n  echo: true\n  freeze: auto\nformat:\n  revealjs: \n    theme: custom.scss\n    slide-number: true\n    code-line-numbers: false\n    highlight-style: github\n    code-overflow: wrap\n    footer: \"[DPaViR 2023](https://jeffreyrstevens.quarto.pub/dpavir)\"\n    code-link: true\n---\n\n\n\n\n\n# Introduction\n\n\n## Set-up\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(palmerpenguins)\n```\n:::\n\n\n\n\n\n\n## Plotting with {ggplot2}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\n```\n:::\n\n\n\n\n![](../images/ggplot2_allisonhorst.png){fig-align=\"center\" width=\"58%\"}\n\n![](../images/ggplot2_hex.png){.absolute width=\"15%\" top=\"0%\" left=\"90%\"}\n\n::: {.aside}\nSource: [Allison Horst](https://allisonhorst.com)\n:::\n\n\n## Grammar of graphics\n\n![](../images/grammar-of-graphics.png){fig-align=\"center\" width=\"58%\"}\n\n\n## Seven components/layers of ggplots\n* Data\n* Mappings -- maps data to properties of geom\n* Geom -- represents data\n* Stat -- transforms data\n* Position -- control placement of data on coordinate\n* Facet -- split graph into subplots\n* Coordinate -- places data in coordinate system\n\n\n## Seven components/layers of ggplots\n\n::: {style=\"font-size:150%\"}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = DATA) +\n  GEOM_FUNCTION(\n    mapping = aes(MAPPINGS),\n    stat = STAT,\n    position = POSITION\n  ) +\n  COORDINATE_FUNCTION +\n  FACET_FUNCTION\n```\n:::\n\n\n\n:::\n\n\n## Full specification of plot\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(data = penguins) +\n  geom_point(\n    mapping = aes(x = bill_length_mm, y = bill_depth_mm),\n    stat = \"identity\",\n    position = \"identity\"\n  ) +\n  coord_cartesian() +\n  facet_null()\n```\n\n::: {.cell-output-display}\n![](26_grammar1_files/figure-revealjs/unnamed-chunk-4-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n\n# Data\n\n## Tidy data\n\nData should be in tidy format for ggplots\n\n::: {style=\"font-size:90%\"}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpg\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 234 × 11\n   manufacturer model      displ  year   cyl trans drv     cty   hwy fl    class\n   <chr>        <chr>      <dbl> <int> <int> <chr> <chr> <int> <int> <chr> <chr>\n 1 audi         a4           1.8  1999     4 auto… f        18    29 p     comp…\n 2 audi         a4           1.8  1999     4 manu… f        21    29 p     comp…\n 3 audi         a4           2    2008     4 manu… f        20    31 p     comp…\n 4 audi         a4           2    2008     4 auto… f        21    30 p     comp…\n 5 audi         a4           2.8  1999     6 auto… f        16    26 p     comp…\n 6 audi         a4           2.8  1999     6 manu… f        18    26 p     comp…\n 7 audi         a4           3.1  2008     6 auto… f        18    27 p     comp…\n 8 audi         a4 quattro   1.8  1999     4 manu… 4        18    26 p     comp…\n 9 audi         a4 quattro   1.8  1999     4 auto… 4        16    25 p     comp…\n10 audi         a4 quattro   2    2008     4 manu… 4        20    28 p     comp…\n# ℹ 224 more rows\n```\n\n\n:::\n:::\n\n\n\n:::\n\n\n## Data to ggplot\n\nData inside `ggplot()`\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(data = mpg)\n```\n\n::: {.cell-output-display}\n![](26_grammar1_files/figure-revealjs/unnamed-chunk-6-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n\n\n## Data to ggplot\n\nData piped to `ggplot()`\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nmpg |>\n  ggplot()\n```\n\n::: {.cell-output-display}\n![](26_grammar1_files/figure-revealjs/unnamed-chunk-7-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n\n\n## Data to ggplot\n\nProcess data before plotting\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nmpg |>\n  filter(class != \"2seater\") |>\n  mutate(class = str_to_sentence(class)) |>\n  ggplot()\n```\n\n::: {.cell-output-display}\n![](26_grammar1_files/figure-revealjs/unnamed-chunk-8-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n\n\n# Mapping\n\n## Map data to positions\n\nSpecify columns for x and y\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n#\nggplot(data = mpg, mapping = aes(x = displ, y = hwy))\n```\n\n::: {.cell-output-display}\n![](26_grammar1_files/figure-revealjs/unnamed-chunk-9-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n\n## Map data to positions\n\nEquivalent but not ideal. Why?\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n#\nggplot(mpg, aes(displ, hwy))\n```\n\n::: {.cell-output-display}\n![](26_grammar1_files/figure-revealjs/unnamed-chunk-10-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n\n## Map data to positions\n\nThis is how we'll do it\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nmpg |>\n  ggplot(aes(x = displ, y = hwy))\n```\n\n::: {.cell-output-display}\n![](26_grammar1_files/figure-revealjs/unnamed-chunk-11-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n\n\n# Geometric objects\n\n## Geoms\n\nThere are many different ways of representing data on a plot\n\n![](../images/ggplot_gallery.png){fig-align=\"center\"}\n\n\n## Plot points\nAdd `geom_point()`\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nmpg |>\n  ggplot(aes(x = displ, y = hwy)) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](26_grammar1_files/figure-revealjs/unnamed-chunk-12-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n\n\n## Plot points\n\nHow is this different? What are advantages/disadvantages?\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nmpg |>\n  ggplot() +\n  geom_point(aes(x = displ, y = hwy))\n```\n\n::: {.cell-output-display}\n![](26_grammar1_files/figure-revealjs/unnamed-chunk-13-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n\n\n## Plot smooth lines\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n#\nmpg |>\n  ggplot(aes(x = displ, y = hwy)) +\n  geom_smooth()\n```\n\n::: {.cell-output-display}\n![](26_grammar1_files/figure-revealjs/unnamed-chunk-14-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n\n## Plot multiple geoms\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nmpg |>\n  ggplot(aes(x = displ, y = hwy)) +\n  geom_point() +\n  geom_smooth()\n```\n\n::: {.cell-output-display}\n![](26_grammar1_files/figure-revealjs/unnamed-chunk-15-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n\n## Order matters\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nmpg |>\n  ggplot(aes(x = displ, y = hwy)) +\n  geom_smooth() +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](26_grammar1_files/figure-revealjs/unnamed-chunk-16-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n\n## Plot linear regression line\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nmpg |>\n  ggplot(aes(x = displ, y = hwy)) +\n  geom_point() +\n  geom_smooth(method = \"lm\")\n```\n\n::: {.cell-output-display}\n![](26_grammar1_files/figure-revealjs/unnamed-chunk-17-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n\n## Plot boxplots\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nmpg |>\n  ggplot(aes(x = class, y = displ)) +\n  geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](26_grammar1_files/figure-revealjs/unnamed-chunk-18-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n\n\n## Let's code!\n\n[Grammar of graphics](../code/26_grammar1.html){target=\"_blank\"} [[Rmd](../code/26_grammar1.Rmd){target=\"_blank\"}]\n",
    "supporting": [
      "26_grammar1_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}