{
  "hash": "fd472a532e39312c694bef33821ab6e7",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Advanced R Markdown\"\nauthor: \"Jeff Stevens\"\ndate: \"2023-05-08\"\ndate-format: iso\nexecute:\n  echo: true\n  freeze: auto\nformat:\n  revealjs: \n    theme: custom.scss\n    slide-number: true\n    code-line-numbers: false\n    highlight-style: github\n    code-overflow: wrap\n    footer: \"[DPaViR 2025](https://jeffreyrstevens.quarto.pub/dpavir)\"\n    code-link: true\n---\n\n\n\n\n\n\n# Set-up\n\nFirst, load `{tidyverse}` and `{palmerpenguin}` packages\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(palmerpenguins)\n```\n:::\n\n\n\n\n\n# Code chunks\n\n## Code chunk options\n\nGo in the `{r}` header of code chunks (in one line)\n\n::: {.incremental}\n* `label = my-chunk` - chunk label\n* `eval = TRUE` - evaluates code chunk\n* `echo = TRUE` - displays source code in document\n* `include = TRUE` - displays chunk output in document\n* `message = TRUE` - displays messages in document\n* `warning = TRUE` - displays warnings in document\n* `error = TRUE` - displays errors in document\n:::\n\n\n## Code chunk options\n\nGo in the `{r}` header of code chunks (in one line)\n\n<code>&#96;&#96;&#96;{r my-chunk, echo = FALSE, message = FALSE, warning = FALSE}</code>\n\n<code>&#96;&#96;&#96;</code>\n\n\n## Code chunk options\n\nCan also be separated from header using `#|`\n\n<code>&#96;&#96;&#96;{r}</code>\n\n<code>#| my-chunk, echo = FALSE, message = FALSE</code>\n\n<code>#| warning = FALSE</code>\n\n<code>&#96;&#96;&#96;</code>\n\n\n## Global options\n\nSet options globally with `knitr::opts_chunk$set()`\n\n<code>&#96;&#96;&#96;{r setup, include = FALSE}</code>\n\n<code>knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)</code>\n\n<code>&#96;&#96;&#96;</code>\n\n\n# Figures\n\n## Figures generated in chunks\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(penguins, aes(bill_length_mm, bill_depth_mm)) + geom_point()\n```\n\n::: {.cell-output-display}\n![](41_advrmarkdown_files/figure-revealjs/unnamed-chunk-2-1.png){width=960}\n:::\n:::\n\n\n\n\n\n## Figure scaling\n\n`fig.width = 5, fig.height = 5`\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(penguins, aes(bill_length_mm, bill_depth_mm)) + geom_point()\n```\n\n::: {.cell-output-display}\n![](41_advrmarkdown_files/figure-revealjs/unnamed-chunk-3-1.png){width=480}\n:::\n:::\n\n\n\n\n\n## Figure scaling\n\n`fig.width = 3, fig.height = 3`\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(penguins, aes(bill_length_mm, bill_depth_mm)) + geom_point()\n```\n\n::: {.cell-output-display}\n![](41_advrmarkdown_files/figure-revealjs/unnamed-chunk-4-1.png){width=288}\n:::\n:::\n\n\n\n\n\n## Output width/height\n\n`out.width = \"30%\", out.height = \"30%\"`\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(penguins, aes(bill_length_mm, bill_depth_mm)) + geom_point()\n```\n\n::: {.cell-output-display}\n![](41_advrmarkdown_files/figure-revealjs/unnamed-chunk-5-1.png){width=30% height=30%}\n:::\n:::\n\n\n\n\n\n## Figure alignment\n\n`fig.align = \"center\"`\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(penguins, aes(bill_length_mm, bill_depth_mm)) + geom_point()\n```\n\n::: {.cell-output-display}\n![](41_advrmarkdown_files/figure-revealjs/unnamed-chunk-6-1.png){fig-align='center' width=480}\n:::\n:::\n\n\n\n\n\n## Figure caption\n\n`fig.cap = \"My figure caption\"`\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(penguins, aes(bill_length_mm, bill_depth_mm)) + geom_point()\n```\n\n::: {.cell-output-display}\n![My figure caption](41_advrmarkdown_files/figure-revealjs/fig-cap-1.png){#fig-cap fig-align='center' width=480}\n:::\n:::\n\n\n\n\n\n## Figure alt text\n\n`fig.alt = \"Scatterplot of penguin bill length by depth.\"`\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(penguins, aes(bill_length_mm, bill_depth_mm)) + geom_point()\n```\n\n::: {.cell-output-display}\n![My figure caption](41_advrmarkdown_files/figure-revealjs/alt-text-1.png){fig-align='center' fig-alt='Scatterplot of penguin bill length by depth.' width=480}\n:::\n:::\n\n\n\n\n\n## Figure files\n\n`knitr::include_graphics()`\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nknitr::include_graphics(\"https://quarto.org/docs/authoring/images/crossref-figure.png\")\n```\n\n::: {.cell-output-display}\n![](https://quarto.org/docs/authoring/images/crossref-figure.png){fig-align='center'}\n:::\n:::\n\n\n\n\n\n# Cross-referencing\n\n## Cross reference figures/tables {#sec-cross-reference}\n\n::: {.incremental}\n* Make sure code chunk has a label and a caption\n\n* Use a `bookdown` output format (e.g., `bookdown::pdf_document2`, `papaja::apa6_pdf`, `thesisdown`)\n\n* Insert `\\ref{fig:chunk-label}` for figures and `\\ref{tab:chunk-label}` for tables\n\n* Note for Quarto, labels must start with `fig-` or `tbl-` and reference with `@fig-label` or `@tbl-label`  (e.g., @fig-cap)\n:::\n\n\n## Cross reference sections\n\n::: {.incremental}\n* Label sections with `{#slug}` <br> (e.g., `## Cross reference figures/tables {#sec-cross-reference}`)\n\n* Cross reference with `\\@ref(slug)`\n\n* For Quarto, cross references must start with `#sec-` and are referenced with `@sec-label` (e.g., @sec-cross-reference) \n:::\n\n\n# Citations and bibliographies\n\n## Zotero\n\n![](../images/zotero.jpeg){fig-align=\"center\"}\n\n\n## Zotero\n\n* Install [Better BibTeX](https://retorque.re/zotero-better-bibtex/) extension\n* Create collection for project\n* Add references to collection\n* Export Collection (check Keep Updated) to BibTeX\n\n\n## Set bibliography\n\n* In YAML header, assign `bibliography` to the project's `.bib` file\n\n\n\n\n::: {.cell}\n\n```{.yaml .cell-code}\nbibliography: zotero-output.bib\n```\n:::\n\n\n\n\n::: {.fragment}\n* If using {papaja}'s `r_ref()` output\n\n\n\n\n::: {.cell}\n\n```{.yaml .cell-code}\nbibliography: [\"zotero-output.bib\", \"r-references.bib\"]\n```\n:::\n\n\n\n:::\n\n\n## Insert citations manually\n\n::: {.incremental}\n* Find BibTex key in Zotero (e.g., Stevens.etal.2023)\n* Insert with `[@citation.key]`: `[@Stevens.etal.2023]` yields (Stevens et al., 2023)\n* Separate multiple citations with `;`: `[@Stevens.etal.2022; @Stevens.etal.2023]` yields (Stevens et al., 2022, 2023)\n* Add prefixes and suffixes: `[see @Stevens.etal.2023, pp. 25]` yields (see Stevens et al., 2023, pp. 25)\n:::\n\n\n## Insert citations manually\n\n::: {.incremental}\n* Use parentheses only for date by removing brackets: `@Stevens.etal.2023` yields Stevens et al. (2023)\n* Use only year by adding `-`: `[-@Stevens.etal.2023]` yields (2023)\n* Add reference to bibliography without adding citation with\n:::\n::: {.fragment}\n```\n---\nnocite: |\n  @Barela.etal.2023\n...\n```\n:::\n\n\n## Insert with {citr} add-in\n\n* Install {citr} with `remotes::install_github(\"crsh/citr\")`\n* Restart RStudio\n* Start Zotero\n* Start citr add-in, select Insert citations\n\n\n## Set citation style\n\n* In YAML header, assign `csl` to citation style `.csl` file\n\n\n\n\n::: {.cell}\n\n```{.yaml .cell-code}\ncsl: apa7.csl\n```\n:::\n\n\n\n\n::: {.fragment}\n* Get CSL files from [Zotero Style Repository](https://www.zotero.org/styles)\n:::\n\n\n",
    "supporting": [
      "41_advrmarkdown_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}