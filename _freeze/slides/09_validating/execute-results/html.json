{
  "hash": "2f2f3c860495b7d1b400e9361e3dff63",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Validating data\"\nauthor: \"Jeff Stevens\"\ndate: \"2023-02-10\"\ndate-format: iso\nexecute:\n  echo: true\n  freeze: true\nformat:\n  revealjs: \n    theme: custom.scss\n    slide-number: true\n    code-line-numbers: false\n    highlight-style: github\n    code-overflow: wrap\n    footer: \"[DPaViR 2023](https://jeffreyrstevens.quarto.pub/dpavir)\"\n    code-link: true\n---\n\n\n\n\n# Review\n\n## Mental model of importing data\n\n![](../images/mentalmodel_import.png){fig-align=\"center\"}\n\n\n## Set up\n\n### Import dog breed traits data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n(mydf <- readr::read_csv(here::here(\"data/dog_breed_traits.csv\")))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 195 × 17\n   Breed    Affectionate With Fa…¹ Good With Young Chil…² `Good With Other Dogs`\n   <chr>                     <dbl>                  <dbl>                  <dbl>\n 1 Retriev…                      5                      5                      5\n 2 French …                      5                      5                      4\n 3 German …                      5                      5                      3\n 4 Retriev…                      5                      5                      5\n 5 Bulldogs                      4                      3                      3\n 6 Poodles                       5                      5                      3\n 7 Beagles                       3                      5                      5\n 8 Rottwei…                      5                      3                      3\n 9 Pointer…                      5                      5                      4\n10 Dachshu…                      5                      3                      4\n# ℹ 185 more rows\n# ℹ abbreviated names: ¹​`Affectionate With Family`, ²​`Good With Young Children`\n# ℹ 13 more variables: `Shedding Level` <dbl>, `Coat Grooming Frequency` <dbl>,\n#   `Drooling Level` <dbl>, `Coat Type` <chr>, `Coat Length` <chr>,\n#   `Openness To Strangers` <dbl>, `Playfulness Level` <dbl>,\n#   `Watchdog/Protective Nature` <dbl>, `Adaptability Level` <dbl>,\n#   `Trainability Level` <dbl>, `Energy Level` <dbl>, `Barking Level` <dbl>, …\n```\n\n\n:::\n:::\n\n\n\n\n## Set up\n\n### Also load {palmerpenguins} for access to `penguins`\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(palmerpenguins)\n```\n:::\n\n\n\n\n\n\n# Data validation\n\n## Data validation\n\n#### Check that your imported data are correct/valid/reasonable\n\n* Dimensions\n\n* Data types\n\n* Ranges and constraints\n\n* Allowed values (code lists)\n\n* Column dependencies\n\n* Completeness/uniqueness\n\n* Missing values\n\n\n---\n\n## Dimensions\n\n### Does the data frame have the correct dimensions?\n\n#### How do we check dimensions of a data frame?\n\n:::{.fragment}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndim(mydf)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 195  17\n```\n\n\n:::\n:::\n\n\n\n:::\n\n## Data types\n\n### Do the data columns have the correct data types?\n\n#### How do we check data types of a data frame?\n\n:::{.fragment}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstr(mydf)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nspc_tbl_ [195 × 17] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ Breed                     : chr [1:195] \"Retrievers (Labrador)\" \"French Bulldogs\" \"German Shepherd Dogs\" \"Retrievers (Golden)\" ...\n $ Affectionate With Family  : num [1:195] 5 5 5 5 4 5 3 5 5 5 ...\n $ Good With Young Children  : num [1:195] 5 5 5 5 3 5 5 3 5 3 ...\n $ Good With Other Dogs      : num [1:195] 5 4 3 5 3 3 5 3 4 4 ...\n $ Shedding Level            : num [1:195] 4 3 4 4 3 1 3 3 3 2 ...\n $ Coat Grooming Frequency   : num [1:195] 2 1 2 2 3 4 2 1 2 2 ...\n $ Drooling Level            : num [1:195] 2 3 2 2 3 1 1 3 2 2 ...\n $ Coat Type                 : chr [1:195] \"Double\" \"Smooth\" \"Double\" \"Double\" ...\n $ Coat Length               : chr [1:195] \"Short\" \"Short\" \"Medium\" \"Medium\" ...\n $ Openness To Strangers     : num [1:195] 5 5 3 5 4 5 3 3 4 4 ...\n $ Playfulness Level         : num [1:195] 5 5 4 4 4 5 4 4 4 4 ...\n $ Watchdog/Protective Nature: num [1:195] 3 3 5 3 3 5 2 5 4 4 ...\n $ Adaptability Level        : num [1:195] 5 5 5 5 3 4 4 4 4 4 ...\n $ Trainability Level        : num [1:195] 5 4 5 5 4 5 3 5 5 4 ...\n $ Energy Level              : num [1:195] 5 3 5 3 3 4 4 3 5 3 ...\n $ Barking Level             : num [1:195] 3 1 3 1 2 4 4 1 3 5 ...\n $ Mental Stimulation Needs  : num [1:195] 4 3 5 4 3 5 4 5 5 3 ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   Breed = col_character(),\n  ..   `Affectionate With Family` = col_double(),\n  ..   `Good With Young Children` = col_double(),\n  ..   `Good With Other Dogs` = col_double(),\n  ..   `Shedding Level` = col_double(),\n  ..   `Coat Grooming Frequency` = col_double(),\n  ..   `Drooling Level` = col_double(),\n  ..   `Coat Type` = col_character(),\n  ..   `Coat Length` = col_character(),\n  ..   `Openness To Strangers` = col_double(),\n  ..   `Playfulness Level` = col_double(),\n  ..   `Watchdog/Protective Nature` = col_double(),\n  ..   `Adaptability Level` = col_double(),\n  ..   `Trainability Level` = col_double(),\n  ..   `Energy Level` = col_double(),\n  ..   `Barking Level` = col_double(),\n  ..   `Mental Stimulation Needs` = col_double()\n  .. )\n - attr(*, \"problems\")=<externalptr> \n```\n\n\n:::\n:::\n\n\n\n:::\n\n## Data types\n\n### Do the data columns have the correct data types?\n\n#### Test specific data type for individual columns\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nis.numeric(mydf$`2013 Rank`)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] FALSE\n```\n\n\n:::\n:::\n\n\n\n\n\n\n## Ranges and constraints\n\n### Do numerical column values have the correct range and/or other constraints?\n\n:::{.fragment}\n:::{.callout-note}\nUseful to check for Likert scales and measures of age (especially coming out of Qualtrics).\n:::\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrange(mydf$`Drooling Level`)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1 5\n```\n\n\n:::\n:::\n\n\n\n:::\n\n\n## Allowed values (code lists)\n\n### Do categorical column values have the correct possible values?\n\n:::{.fragment}\n:::{.callout-note}\nUseful to check for when users can enter text instead of choose options.\n:::\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n(recorded_coats <- unique(mydf$`Coat Type`))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Double\"   \"Smooth\"   \"Curly\"    \"Silky\"    \"Wavy\"     \"Wiry\"     \"Hairless\"\n[8] \"Rough\"    \"Corded\"  \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nallowed_coats <- c(\"Smooth\", \"Curly\", \"Silky\", \"Wavy\", \"Wiry\", \"Rough\")\nrecorded_coats %in% allowed_coats\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] FALSE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE FALSE\n```\n\n\n:::\n:::\n\n\n\n:::\n\n\n## Column dependencies\n\n### Do column dependencies match up?\n\nE.g., if \"other\" is selected in `choice` column, does `other` column have an entry?\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf$choice == \"other\" & !is.na(df$other)\n```\n:::\n\n\n\n\n\n## Completeness\n\n### Are all expected observations included?\n\n#### How do we test this?\n\n:::{.fragment}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nobserved_subjects %in% expected_subjects\n```\n:::\n\n\n\n:::\n\n## Uniqueness\n\n### Are there duplicate observations?\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nduplicated(mydf$Breed)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  [1] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [13] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [25] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [37] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [49] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [61] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [73] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [85] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [97] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[109] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[121] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[133] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[145] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[157] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[169] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[181] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[193] FALSE FALSE FALSE\n```\n\n\n:::\n:::\n\n\n\n\n:::{.fragment}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmydf[duplicated(mydf$Breed), ]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 0 × 17\n# ℹ 17 variables: Breed <chr>, Affectionate With Family <dbl>,\n#   Good With Young Children <dbl>, Good With Other Dogs <dbl>,\n#   Shedding Level <dbl>, Coat Grooming Frequency <dbl>, Drooling Level <dbl>,\n#   Coat Type <chr>, Coat Length <chr>, Openness To Strangers <dbl>,\n#   Playfulness Level <dbl>, Watchdog/Protective Nature <dbl>,\n#   Adaptability Level <dbl>, Trainability Level <dbl>, Energy Level <dbl>,\n#   Barking Level <dbl>, Mental Stimulation Needs <dbl>\n```\n\n\n:::\n:::\n\n\n\n:::\n\n\n## Missing values\n\n### Are there values with missing data?\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nis.na(penguins$bill_length_mm)\n```\n:::\n\n\n\n\n:::{.fragment}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins[is.na(penguins$bill_length_mm), ]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 8\n  species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n  <fct>   <fct>              <dbl>         <dbl>             <int>       <int>\n1 Adelie  Torgersen             NA            NA                NA          NA\n2 Gentoo  Biscoe                NA            NA                NA          NA\n# ℹ 2 more variables: sex <fct>, year <int>\n```\n\n\n:::\n:::\n\n\n\n:::\n\n\n## Missing values\n\n### Are there values with missing data?\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins[!complete.cases(penguins), ]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 11 × 8\n   species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n   <fct>   <fct>              <dbl>         <dbl>             <int>       <int>\n 1 Adelie  Torgersen           NA            NA                  NA          NA\n 2 Adelie  Torgersen           34.1          18.1               193        3475\n 3 Adelie  Torgersen           42            20.2               190        4250\n 4 Adelie  Torgersen           37.8          17.1               186        3300\n 5 Adelie  Torgersen           37.8          17.3               180        3700\n 6 Adelie  Dream               37.5          18.9               179        2975\n 7 Gentoo  Biscoe              44.5          14.3               216        4100\n 8 Gentoo  Biscoe              46.2          14.4               214        4650\n 9 Gentoo  Biscoe              47.3          13.8               216        4725\n10 Gentoo  Biscoe              44.5          15.7               217        4875\n11 Gentoo  Biscoe              NA            NA                  NA          NA\n# ℹ 2 more variables: sex <fct>, year <int>\n```\n\n\n:::\n:::\n\n\n\n\n\n# Summarizing data\n\n## Summarizing data\n\n### `head()`\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(mydf)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 17\n  Breed     Affectionate With Fa…¹ Good With Young Chil…² `Good With Other Dogs`\n  <chr>                      <dbl>                  <dbl>                  <dbl>\n1 Retrieve…                      5                      5                      5\n2 French B…                      5                      5                      4\n3 German S…                      5                      5                      3\n4 Retrieve…                      5                      5                      5\n5 Bulldogs                       4                      3                      3\n6 Poodles                        5                      5                      3\n# ℹ abbreviated names: ¹​`Affectionate With Family`, ²​`Good With Young Children`\n# ℹ 13 more variables: `Shedding Level` <dbl>, `Coat Grooming Frequency` <dbl>,\n#   `Drooling Level` <dbl>, `Coat Type` <chr>, `Coat Length` <chr>,\n#   `Openness To Strangers` <dbl>, `Playfulness Level` <dbl>,\n#   `Watchdog/Protective Nature` <dbl>, `Adaptability Level` <dbl>,\n#   `Trainability Level` <dbl>, `Energy Level` <dbl>, `Barking Level` <dbl>,\n#   `Mental Stimulation Needs` <dbl>\n```\n\n\n:::\n:::\n\n\n\n\n\n## Summarizing data\n\n### `glimpse()`\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntibble::glimpse(mydf)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 195\nColumns: 17\n$ Breed                        <chr> \"Retrievers (Labrador)\", \"French Bulldogs…\n$ `Affectionate With Family`   <dbl> 5, 5, 5, 5, 4, 5, 3, 5, 5, 5, 5, 3, 5, 4,…\n$ `Good With Young Children`   <dbl> 5, 5, 5, 5, 3, 5, 5, 3, 5, 3, 3, 5, 5, 5,…\n$ `Good With Other Dogs`       <dbl> 5, 4, 3, 5, 3, 3, 5, 3, 4, 4, 4, 3, 3, 3,…\n$ `Shedding Level`             <dbl> 4, 3, 4, 4, 3, 1, 3, 3, 3, 2, 4, 3, 1, 2,…\n$ `Coat Grooming Frequency`    <dbl> 2, 1, 2, 2, 3, 4, 2, 1, 2, 2, 2, 2, 5, 2,…\n$ `Drooling Level`             <dbl> 2, 3, 2, 2, 3, 1, 1, 3, 2, 2, 1, 1, 1, 3,…\n$ `Coat Type`                  <chr> \"Double\", \"Smooth\", \"Double\", \"Double\", \"…\n$ `Coat Length`                <chr> \"Short\", \"Short\", \"Medium\", \"Medium\", \"Sh…\n$ `Openness To Strangers`      <dbl> 5, 5, 3, 5, 4, 5, 3, 3, 4, 4, 4, 3, 5, 4,…\n$ `Playfulness Level`          <dbl> 5, 5, 4, 4, 4, 5, 4, 4, 4, 4, 4, 4, 4, 4,…\n$ `Watchdog/Protective Nature` <dbl> 3, 3, 5, 3, 3, 5, 2, 5, 4, 4, 5, 3, 5, 4,…\n$ `Adaptability Level`         <dbl> 5, 5, 5, 5, 3, 4, 4, 4, 4, 4, 4, 3, 5, 3,…\n$ `Trainability Level`         <dbl> 5, 4, 5, 5, 4, 5, 3, 5, 5, 4, 4, 5, 4, 4,…\n$ `Energy Level`               <dbl> 5, 3, 5, 3, 3, 4, 4, 3, 5, 3, 4, 5, 4, 4,…\n$ `Barking Level`              <dbl> 3, 1, 3, 1, 2, 4, 4, 1, 3, 5, 4, 3, 4, 3,…\n$ `Mental Stimulation Needs`   <dbl> 4, 3, 5, 4, 3, 5, 4, 5, 5, 3, 4, 5, 4, 4,…\n```\n\n\n:::\n:::\n\n\n\n\n\n## Summarizing data\n\n### `summary()`\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(penguins)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      species          island    bill_length_mm  bill_depth_mm  \n Adelie   :152   Biscoe   :168   Min.   :32.10   Min.   :13.10  \n Chinstrap: 68   Dream    :124   1st Qu.:39.23   1st Qu.:15.60  \n Gentoo   :124   Torgersen: 52   Median :44.45   Median :17.30  \n                                 Mean   :43.92   Mean   :17.15  \n                                 3rd Qu.:48.50   3rd Qu.:18.70  \n                                 Max.   :59.60   Max.   :21.50  \n                                 NA's   :2       NA's   :2      \n flipper_length_mm  body_mass_g       sex           year     \n Min.   :172.0     Min.   :2700   female:165   Min.   :2007  \n 1st Qu.:190.0     1st Qu.:3550   male  :168   1st Qu.:2007  \n Median :197.0     Median :4050   NA's  : 11   Median :2008  \n Mean   :200.9     Mean   :4202                Mean   :2008  \n 3rd Qu.:213.0     3rd Qu.:4750                3rd Qu.:2009  \n Max.   :231.0     Max.   :6300                Max.   :2009  \n NA's   :2         NA's   :2                                 \n```\n\n\n:::\n:::\n\n\n\n\n\n## [{skimr}](https://docs.ropensci.org/skimr/)\n\n#### View info about your data\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(skimr)\nskim(penguins)\n```\n\n::: {.cell-output-display}\n\nTable: Data summary\n\n|                         |         |\n|:------------------------|:--------|\n|Name                     |penguins |\n|Number of rows           |344      |\n|Number of columns        |8        |\n|_______________________  |         |\n|Column type frequency:   |         |\n|factor                   |3        |\n|numeric                  |5        |\n|________________________ |         |\n|Group variables          |None     |\n\n\n**Variable type: factor**\n\n|skim_variable | n_missing| complete_rate|ordered | n_unique|top_counts                  |\n|:-------------|---------:|-------------:|:-------|--------:|:---------------------------|\n|species       |         0|          1.00|FALSE   |        3|Ade: 152, Gen: 124, Chi: 68 |\n|island        |         0|          1.00|FALSE   |        3|Bis: 168, Dre: 124, Tor: 52 |\n|sex           |        11|          0.97|FALSE   |        2|mal: 168, fem: 165          |\n\n\n**Variable type: numeric**\n\n|skim_variable     | n_missing| complete_rate|    mean|     sd|     p0|     p25|     p50|    p75|   p100|hist  |\n|:-----------------|---------:|-------------:|-------:|------:|------:|-------:|-------:|------:|------:|:-----|\n|bill_length_mm    |         2|          0.99|   43.92|   5.46|   32.1|   39.23|   44.45|   48.5|   59.6|▃▇▇▆▁ |\n|bill_depth_mm     |         2|          0.99|   17.15|   1.97|   13.1|   15.60|   17.30|   18.7|   21.5|▅▅▇▇▂ |\n|flipper_length_mm |         2|          0.99|  200.92|  14.06|  172.0|  190.00|  197.00|  213.0|  231.0|▂▇▃▅▂ |\n|body_mass_g       |         2|          0.99| 4201.75| 801.95| 2700.0| 3550.00| 4050.00| 4750.0| 6300.0|▃▇▆▃▂ |\n|year              |         0|          1.00| 2008.03|   0.82| 2007.0| 2007.00| 2008.00| 2009.0| 2009.0|▇▁▇▁▇ |\n\n\n:::\n:::\n\n\n\n\n\n# Testing data\n\n## [{validate}](https://github.com/data-cleaning/validate)\n\n* Create **rules** about dimensions, data types, ranges, code lists, etc.\n\n* Confront your data with the rules\n\n* Summarize/visualize validation\n\n![](../images/validate.png){.absolute width=\"40%\" top=\"25%\" left=\"65%\"}\n\n\n---\n\n## [{assertr}](https://docs.ropensci.org/assertr/)\n\n* Assertions: tests of data embedded in functions\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(assertr)\nverify(penguins, has_all_names(\"species\", \"island\", \"sex\"))\nverify(penguins, nrow(penguins) > 100)\nverify(penguins, bill_length_mm > 0)\ninsist(penguins, within_n_sds(4), bill_length_mm)\nassert(penguins, in_set(2007, 2008, 2009), year)\n```\n:::\n\n\n\n\n\n# Excluding data\n\n## [{excluder}](https://docs.ropensci.org/excluder/)\n\n### Working with Qualtrics data can be ... challenging. \n\n{excluder} helps:\n\n:::{.incremental}\n* get rid of initial rows with `remove_label_rows()`\n* use Qualtrics labels as column names with `use_labels()`\n* deidentify data with `deidentify()`\n* view, mark, or exclude data based on: preview status, survey progress, survey completion time, IP address country, geolocation, duplicate IP address, and screen resolution\n:::\n\n\n# Codebooks\n\n## [{dataReporter}](https://github.com/ekstroem/dataReporter)\n\n![](../images/codebook.png){fig-align=\"center\" width=\"85%\"}\n\n\n\n---\n\n## [{dataReporter}](https://github.com/ekstroem/dataReporter)\n\n![](../images/codebook2.png){fig-align=\"center\" width=\"85%\"}\n\n\n---\n\n## [{dataReporter}](https://github.com/ekstroem/dataReporter)\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndataReporter::makeCodebook(mydf3, file = here(\"06_codebook.Rmd\"))\n```\n:::\n\n\n\n\n\n## Let's code!\n\n[Validating data](../code/09_validating.html){target=\"_blank\"} [[Rmd](../code/09_validating.Rmd){target=\"_blank\"}]\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}