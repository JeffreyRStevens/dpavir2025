{
  "hash": "34f24c04f4940932e43d96f436d01c30",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Merging rows\"\nauthor: \"Jeffrey R. Stevens\"\ndate: \"2023-03-03\"\noutput: html_document\nexecute:\n  freeze: auto\n---\n\n\n\nFor these exercises, we'll use the dog breed traits and dog breed popularity rankings data sets. \n\n1. Load tidyverse, import [`dog_breed_traits_clean.csv`](https://jeffreyrstevens.github.io/dpavir2025/data/dog_breed_traits_clean.csv) to `traits`, import [`dog_breed_ranks.csv`](https://jeffreyrstevens.github.io/dpavir2025/data/dog_breed_ranks.csv) to `ranks`, and import [`dog_breed_ranks.csv`](https://jeffreyrstevens.github.io/dpavir2025/data/dog_breed_popularity.csv) to `popularity`.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\ntraits <- read_csv(here::here(\"data/dog_breed_traits_clean.csv\"), show_col_types = FALSE)\nranks <- read_csv(here::here(\"data/dog_breed_ranks.csv\"), show_col_types = FALSE)\npopularity <- read_csv(here::here(\"data/dog_breed_popularity.csv\"), show_col_types = FALSE)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nNew names:\n• `` -> `...2`\n```\n\n\n:::\n:::\n\n\n\n\n2. First, set a random seed by using `set.seed(2)`. Then create a subset of `ranks` that is a random selection of 10% of the rows, sort by breed name, and assign to `ranks2`.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(2)\nranks2 <- slice_sample(ranks, prop = 0.1) |> \n  arrange(breed)\n```\n:::\n\n\n\n\n3. Use a filtering join to return the subset of `traits` that _matches_ the breeds in `ranks2` and assign this to `traits2`.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntraits2 <- traits |> \n  semi_join(ranks2, by = \"breed\")\n```\n:::\n\n\n\n\n4. Use a filtering join to return the subset of `traits` that _excludes_ the breeds in `ranks2`.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntraits |> \n  anti_join(ranks2, by = \"breed\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 178 × 8\n   breed            affectionate children other_dogs shedding grooming coat_type\n   <chr>                   <dbl>    <dbl>      <dbl>    <dbl>    <dbl> <chr>    \n 1 Retrievers (Lab…            5        5          5        4        2 Double   \n 2 French Bulldogs             5        5          4        3        1 Smooth   \n 3 German Shepherd…            5        5          3        4        2 Double   \n 4 Retrievers (Gol…            5        5          5        4        2 Double   \n 5 Bulldogs                    4        3          3        3        3 Smooth   \n 6 Poodles                     5        5          3        1        4 Curly    \n 7 Beagles                     3        5          5        3        2 Smooth   \n 8 Rottweilers                 5        3          3        3        1 Smooth   \n 9 Pointers (Germa…            5        5          4        3        2 Smooth   \n10 Dachshunds                  5        3          4        2        2 Smooth   \n# ℹ 168 more rows\n# ℹ 1 more variable: coat_length <chr>\n```\n\n\n:::\n:::\n\n\n\n\n5. Now we want to filter `traits` based on breeds in `popularity`. Notice that the breeds column in `popularity` is called _Breed_. This is problematic because the breed column in `traits` is called _breed_ and names are case-sensitive. Use `join_by()` to filter `traits` by breeds in `popularity`. How many rows are there?\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntraits |> \n  semi_join(popularity, by = join_by(breed == Breed))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 195 × 8\n   breed            affectionate children other_dogs shedding grooming coat_type\n   <chr>                   <dbl>    <dbl>      <dbl>    <dbl>    <dbl> <chr>    \n 1 Retrievers (Lab…            5        5          5        4        2 Double   \n 2 French Bulldogs             5        5          4        3        1 Smooth   \n 3 German Shepherd…            5        5          3        4        2 Double   \n 4 Retrievers (Gol…            5        5          5        4        2 Double   \n 5 Bulldogs                    4        3          3        3        3 Smooth   \n 6 Poodles                     5        5          3        1        4 Curly    \n 7 Beagles                     3        5          5        3        2 Smooth   \n 8 Rottweilers                 5        3          3        3        1 Smooth   \n 9 Pointers (Germa…            5        5          4        3        2 Smooth   \n10 Dachshunds                  5        3          4        2        2 Smooth   \n# ℹ 185 more rows\n# ℹ 1 more variable: coat_length <chr>\n```\n\n\n:::\n:::\n\n\n\n\n6. Use `filter()` (not joins) to return the subset of `traits` that _excludes_ the breeds in `ranks2`.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntraits |> \n  filter(!breed %in% ranks2$breed)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 178 × 8\n   breed            affectionate children other_dogs shedding grooming coat_type\n   <chr>                   <dbl>    <dbl>      <dbl>    <dbl>    <dbl> <chr>    \n 1 Retrievers (Lab…            5        5          5        4        2 Double   \n 2 French Bulldogs             5        5          4        3        1 Smooth   \n 3 German Shepherd…            5        5          3        4        2 Double   \n 4 Retrievers (Gol…            5        5          5        4        2 Double   \n 5 Bulldogs                    4        3          3        3        3 Smooth   \n 6 Poodles                     5        5          3        1        4 Curly    \n 7 Beagles                     3        5          5        3        2 Smooth   \n 8 Rottweilers                 5        3          3        3        1 Smooth   \n 9 Pointers (Germa…            5        5          4        3        2 Smooth   \n10 Dachshunds                  5        3          4        2        2 Smooth   \n# ℹ 168 more rows\n# ℹ 1 more variable: coat_length <chr>\n```\n\n\n:::\n:::\n\n\n\n\n7. Append `traits2` to the bottom of itself.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbind_rows(traits2, traits2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 38 × 8\n   breed            affectionate children other_dogs shedding grooming coat_type\n   <chr>                   <dbl>    <dbl>      <dbl>    <dbl>    <dbl> <chr>    \n 1 Yorkshire Terri…            5        5          3        1        5 Silky    \n 2 Miniature Schna…            5        5          3        3        4 Wiry     \n 3 Cane Corso                  4        3          3        2        1 Smooth   \n 4 Weimaraners                 5        5          3        3        2 Smooth   \n 5 Bullmastiffs                4        3          3        3        1 Smooth   \n 6 Scottish Terrie…            5        3          2        2        3 Wiry     \n 7 Chinese Shar-Pei            4        3          3        3        1 Smooth   \n 8 Cardigan Welsh …            4        4          3        3        2 Double   \n 9 Lhasa Apsos                 5        3          3        1        3 Silky    \n10 Coton de Tulear             5        5          5        2        4 Double   \n# ℹ 28 more rows\n# ℹ 1 more variable: coat_length <chr>\n```\n\n\n:::\n:::\n\n\n\n\n8. Append `traits2` to the right of itself.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbind_cols(traits2, traits2)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nNew names:\n• `breed` -> `breed...1`\n• `affectionate` -> `affectionate...2`\n• `children` -> `children...3`\n• `other_dogs` -> `other_dogs...4`\n• `shedding` -> `shedding...5`\n• `grooming` -> `grooming...6`\n• `coat_type` -> `coat_type...7`\n• `coat_length` -> `coat_length...8`\n• `breed` -> `breed...9`\n• `affectionate` -> `affectionate...10`\n• `children` -> `children...11`\n• `other_dogs` -> `other_dogs...12`\n• `shedding` -> `shedding...13`\n• `grooming` -> `grooming...14`\n• `coat_type` -> `coat_type...15`\n• `coat_length` -> `coat_length...16`\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 19 × 16\n   breed...1           affectionate...2 children...3 other_dogs...4 shedding...5\n   <chr>                          <dbl>        <dbl>          <dbl>        <dbl>\n 1 Yorkshire Terriers                 5            5              3            1\n 2 Miniature Schnauze…                5            5              3            3\n 3 Cane Corso                         4            3              3            2\n 4 Weimaraners                        5            5              3            3\n 5 Bullmastiffs                       4            3              3            3\n 6 Scottish Terriers                  5            3              2            2\n 7 Chinese Shar-Pei                   4            3              3            3\n 8 Cardigan Welsh Cor…                4            4              3            3\n 9 Lhasa Apsos                        5            3              3            1\n10 Coton de Tulear                    5            5              5            2\n11 Anatolian Shepherd…                1            3              3            3\n12 Basenjis                           3            3              3            2\n13 Miniature Bull Ter…                5            3              3            2\n14 Setters (Gordon)                   5            3              3            3\n15 Spaniels (Clumber)                 4            3              3            3\n16 Pulik                              5            3              3            1\n17 Salukis                            5            3              3            2\n18 Barbets                            4            5              5            1\n19 Pharaoh Hounds                     5            3              5            3\n# ℹ 11 more variables: grooming...6 <dbl>, coat_type...7 <chr>,\n#   coat_length...8 <chr>, breed...9 <chr>, affectionate...10 <dbl>,\n#   children...11 <dbl>, other_dogs...12 <dbl>, shedding...13 <dbl>,\n#   grooming...14 <dbl>, coat_type...15 <chr>, coat_length...16 <chr>\n```\n\n\n:::\n:::\n\n\n\n\n9. Append `traits2` to the right of `ranks2`. \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbind_cols(ranks2, traits2)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nNew names:\n• `breed` -> `breed...1`\n• `breed` -> `breed...10`\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 19 × 17\n   breed...1         `2013 Rank` `2014 Rank` `2015 Rank` `2016 Rank` `2017 Rank`\n   <chr>                   <dbl>       <dbl>       <dbl>       <dbl>       <dbl>\n 1 Anatolian Shephe…          93          94          92          84          86\n 2 Barbets                    NA          NA          NA          NA          NA\n 3 Basenjis                   85          86          87          88          84\n 4 Bullmastiffs               41          45          43          48          51\n 5 Cane Corso                 50          48          35          40          37\n 6 Cardigan Welsh C…          75          78          76          69          68\n 7 Chinese Shar-Pei           54          58          59          61          64\n 8 Coton de Tulear            NA          31          85          80          81\n 9 Lhasa Apsos                63          67          65          71          77\n10 Miniature Bull T…         125         129         121         120         115\n11 Miniature Schnau…          17          16          16          17          18\n12 Pharaoh Hounds            160         164         171         168         174\n13 Pulik                     136         151         154         159         142\n14 Salukis                   115         134         132         125         123\n15 Scottish Terriers          55          59          58          58          58\n16 Setters (Gordon)          105         100         105         104         104\n17 Spaniels (Clumbe…         131         143         134         144         140\n18 Weimaraners                33          35          34          34          34\n19 Yorkshire Terrie…           6           6           7           9           9\n# ℹ 11 more variables: `2018 Rank` <dbl>, `2019 Rank` <dbl>, `2020 Rank` <dbl>,\n#   breed...10 <chr>, affectionate <dbl>, children <dbl>, other_dogs <dbl>,\n#   shedding <dbl>, grooming <dbl>, coat_type <chr>, coat_length <chr>\n```\n\n\n:::\n:::\n\n\n\n\n10. Why is this not a good idea? What would be a better way to achieve this?\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nleft_join(ranks2, traits2)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nJoining with `by = join_by(breed)`\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 19 × 16\n   breed `2013 Rank` `2014 Rank` `2015 Rank` `2016 Rank` `2017 Rank` `2018 Rank`\n   <chr>       <dbl>       <dbl>       <dbl>       <dbl>       <dbl>       <dbl>\n 1 Anat…          93          94          92          84          86          90\n 2 Barb…          NA          NA          NA          NA          NA          NA\n 3 Base…          85          86          87          88          84          87\n 4 Bull…          41          45          43          48          51          51\n 5 Cane…          50          48          35          40          37          32\n 6 Card…          75          78          76          69          68          68\n 7 Chin…          54          58          59          61          64          64\n 8 Coto…          NA          31          85          80          81          81\n 9 Lhas…          63          67          65          71          77          71\n10 Mini…         125         129         121         120         115         110\n11 Mini…          17          16          16          17          18          19\n12 Phar…         160         164         171         168         174         172\n13 Pulik         136         151         154         159         142         160\n14 Salu…         115         134         132         125         123         120\n15 Scot…          55          59          58          58          58          57\n16 Sett…         105         100         105         104         104         115\n17 Span…         131         143         134         144         140         143\n18 Weim…          33          35          34          34          34          36\n19 York…           6           6           7           9           9          10\n# ℹ 9 more variables: `2019 Rank` <dbl>, `2020 Rank` <dbl>, affectionate <dbl>,\n#   children <dbl>, other_dogs <dbl>, shedding <dbl>, grooming <dbl>,\n#   coat_type <chr>, coat_length <chr>\n```\n\n\n:::\n:::\n",
    "supporting": [
      "18_mergingrows_answers_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}