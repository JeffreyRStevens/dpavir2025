{
  "hash": "077be221d144927e037824e966494a89",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Validating data\"\nauthor: \"Jeffrey R. Stevens\"\ndate: \"2023-02-10\"\noutput: html_document\nexecute:\n  freeze: auto\n---\n\n\n\nFor these exercises, we'll use the `mtcars` data set build into base R.\n\n1. What are the dimensions of `mtcars`?\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndim(mtcars)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 32 11\n```\n\n\n:::\n:::\n\n\n\n2. In one line of code, view the data types for all of the columns in `mtcars`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstr(mtcars)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n'data.frame':\t32 obs. of  11 variables:\n $ mpg : num  21 21 22.8 21.4 18.7 18.1 14.3 24.4 22.8 19.2 ...\n $ cyl : num  6 6 4 6 8 6 8 4 4 6 ...\n $ disp: num  160 160 108 258 360 ...\n $ hp  : num  110 110 93 110 175 105 245 62 95 123 ...\n $ drat: num  3.9 3.9 3.85 3.08 3.15 2.76 3.21 3.69 3.92 3.92 ...\n $ wt  : num  2.62 2.88 2.32 3.21 3.44 ...\n $ qsec: num  16.5 17 18.6 19.4 17 ...\n $ vs  : num  0 0 1 1 0 1 0 1 1 1 ...\n $ am  : num  1 1 1 0 0 0 0 0 0 0 ...\n $ gear: num  4 4 4 3 3 3 3 4 4 4 ...\n $ carb: num  4 4 1 1 2 1 4 2 2 4 ...\n```\n\n\n:::\n:::\n\n\n\n3. What is the range of values for the `mpg` column?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrange(mtcars$mpg)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 10.4 33.9\n```\n\n\n:::\n:::\n\n\n\n4. What are all of the possible values used in `gear`?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nunique(mtcars$gear)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 4 3 5\n```\n\n\n:::\n:::\n\n\n\n5. Check whether the value 5 is found in the `carb` column.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n5 %in% mtcars$carb\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] FALSE\n```\n\n\n:::\n:::\n\n\n\n6. Do any columns have missing values?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(mtcars)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      mpg             cyl             disp             hp       \n Min.   :10.40   Min.   :4.000   Min.   : 71.1   Min.   : 52.0  \n 1st Qu.:15.43   1st Qu.:4.000   1st Qu.:120.8   1st Qu.: 96.5  \n Median :19.20   Median :6.000   Median :196.3   Median :123.0  \n Mean   :20.09   Mean   :6.188   Mean   :230.7   Mean   :146.7  \n 3rd Qu.:22.80   3rd Qu.:8.000   3rd Qu.:326.0   3rd Qu.:180.0  \n Max.   :33.90   Max.   :8.000   Max.   :472.0   Max.   :335.0  \n      drat             wt             qsec             vs        \n Min.   :2.760   Min.   :1.513   Min.   :14.50   Min.   :0.0000  \n 1st Qu.:3.080   1st Qu.:2.581   1st Qu.:16.89   1st Qu.:0.0000  \n Median :3.695   Median :3.325   Median :17.71   Median :0.0000  \n Mean   :3.597   Mean   :3.217   Mean   :17.85   Mean   :0.4375  \n 3rd Qu.:3.920   3rd Qu.:3.610   3rd Qu.:18.90   3rd Qu.:1.0000  \n Max.   :4.930   Max.   :5.424   Max.   :22.90   Max.   :1.0000  \n       am              gear            carb      \n Min.   :0.0000   Min.   :3.000   Min.   :1.000  \n 1st Qu.:0.0000   1st Qu.:3.000   1st Qu.:2.000  \n Median :0.0000   Median :4.000   Median :2.000  \n Mean   :0.4062   Mean   :3.688   Mean   :2.812  \n 3rd Qu.:1.0000   3rd Qu.:4.000   3rd Qu.:4.000  \n Max.   :1.0000   Max.   :5.000   Max.   :8.000  \n```\n\n\n:::\n:::\n\n\n\n7. What is the 3rd quartile for `mpg`?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(mtcars$mpg)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  10.40   15.43   19.20   20.09   22.80   33.90 \n```\n\n\n:::\n:::\n\n\n\n8. Check whether all horsepower (`hp`) values fall between 50 and 300. Which row numbers fall out of this range?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwhich(mtcars$hp < 50)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\ninteger(0)\n```\n\n\n:::\n\n```{.r .cell-code}\nwhich(mtcars$hp > 300)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 31\n```\n\n\n:::\n:::\n\n\n\n9. Make a codebook for `mtcars`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#dataReporter::makeCodebook(mtcars, replace = TRUE)\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}