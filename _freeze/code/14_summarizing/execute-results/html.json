{
  "hash": "b9c50a5700733c9e8125f1eb944eb2fc",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Summarizing rows\"\nauthor: \"Jeffrey R. Stevens\"\ndate: \"2025-02-21\"\noutput: html_document\nexecute:\n  freeze: auto\n---\n\n\n\n\nFor these exercises, we'll use a new clean version of the dog breed traits data set. \n\n1. Import data from <https://jeffreyrstevens.github.io/dpavir2025/data/dog_breed_traits_clean.csv> and assign to `traits`.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# >\n```\n:::\n\n\n\n\n2. What is the overall mean rating for _affectionate_?\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# >\n```\n:::\n\n\n\n\n3. What is the overall mean rating for each of the rating columns ignoring `NA`s? \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# >\n```\n:::\n\n\n\n\n4. How many breeds are there in each coat type?\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# >\n```\n:::\n\n\n\n\n5. What is the median grooming rating for each coat type?\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# >\n```\n:::\n\n\n\n\n6. What is the lowest rating per coat length for each of the rating columns, ignoring `NA`s?\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# >\n```\n:::\n\n\n\n\n7. What are the sample size, mean, and standard deviation of shedding ratings for medium coat length dogs per coat type sorted from largest to smallest sample size and only including coat types with 5 or more samples? Note: the order mentioned here is not necessarily the correct order for your pipeline.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# >\n```\n:::\n\n\n\n\n8. Calculate each breed's mean rating across each ratings column and return a data frame with the highest rating for each coat type. Don't forget to undo `rowwise()` with `ungroup()` before further calculations.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# >\n```\n:::\n",
    "supporting": [
      "14_summarizing_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}