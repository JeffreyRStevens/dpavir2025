{
  "hash": "e4d0bebf27f9d52866164d8cc311cc6c",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Plotting x-y data: associations\"\nauthor: \"Jeffrey R. Stevens\"\ndate: \"2023-04-17\"\noutput: html_document\nexecute:\n  freeze: auto\n---\n\n\n\n\n1. Using the `mpg` data, create a scatterplot of the highway fuel efficiency and city fuel efficiency.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nmpg |> \n  ggplot(aes(x = hwy, y = cty)) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](33_associations_answers_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n\n\n\n2. Now add a dashed reference line showing equivalent values for the two axes and set the aspect ratio to 1.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpg |> \n  ggplot(aes(x = hwy, y = cty)) +\n  geom_abline(slope = 1, intercept = 0, linetype = \"dashed\")+\n  geom_point() +\n  theme(aspect.ratio = 1)\n```\n\n::: {.cell-output-display}\n![](33_associations_answers_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n\n3. Looks like there is a possibility of overplotting. Turn this into a bubble chart with dot size scaling to the number of data points for each dot and make the dot colors _steelblue_.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpg |> \n  ggplot(aes(x = hwy, y = cty)) +\n  geom_count(color = \"steelblue\")\n```\n\n::: {.cell-output-display}\n![](33_associations_answers_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n\n4. Add rugs to scatterplot #1 and change to minimal theme.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpg |> \n  ggplot(aes(x = hwy, y = cty)) +\n  geom_point() +\n  geom_rug() +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](33_associations_answers_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n\n\n5. From scatterplot #1, color the dots by class, move the legend to the top left corner of the plot, and add marginal density plots.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggExtra)\nclass_plot <- mpg |> \n  ggplot(aes(x = hwy, y = cty, color = class)) +\n  geom_point() +\n  theme(legend.position = c(0.2, 0.7))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: A numeric `legend.position` argument in `theme()` was deprecated in ggplot2\n3.5.0.\nℹ Please use the `legend.position.inside` argument of `theme()` instead.\n```\n\n\n:::\n\n```{.r .cell-code}\nggMarginal(class_plot, type = \"density\", groupFill = TRUE)\n```\n\n::: {.cell-output-display}\n![](33_associations_answers_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\n6. Create a data frame called `mpg_num` that only includes variables with numeric values using the `where()` function. Then remove the _year_ column.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpg_num <- mpg |> \n  select(where(is.numeric)) |> \n  select(!year)\n```\n:::\n\n\n\n\n7. Create correlation plots of the numeric variables in `mpg_num` in both base R and using {GGally}'s `ggpairs()` function.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npairs(mpg_num)\n```\n\n::: {.cell-output-display}\n![](33_associations_answers_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n\n```{.r .cell-code}\nlibrary(GGally)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRegistered S3 method overwritten by 'GGally':\n  method from   \n  +.gg   ggplot2\n```\n\n\n:::\n\n```{.r .cell-code}\nggpairs(mpg_num)\n```\n\n::: {.cell-output-display}\n![](33_associations_answers_files/figure-html/unnamed-chunk-7-2.png){width=672}\n:::\n:::\n\n\n\n\n8. Create a correlation matrix of `mpg_num` with the `cor()` function. Then use `ggcorrplot()` from the {ggcorrplot} package to make a heatmap correlation plot with just the upper triangle of the matrix and using circles to represent correlation coefficient magnitude.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggcorrplot)\nmpg_num |> \n  cor() |> \n  ggcorrplot(type = \"upper\", method = \"circle\")\n```\n\n::: {.cell-output-display}\n![](33_associations_answers_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "33_associations_answers_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}