{
  "hash": "49c2b35a988d8151fa68673f0b6d89ce",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Numbers\"\nauthor: \"Jeffrey R. Stevens\"\ndate: \"2025-03-05\"\noutput: html_document\nexecute:\n  freeze: auto\n---\n\n\n\nFor these exercises, we'll use the dog breed traits and dog breed popularity rankings data sets. \n\n1. Load tidyverse and import [`dog_breed_traits_clean.csv`](https://jeffreyrstevens.github.io/dpavir2025/data/dog_breed_traits_clean.csv) to `traits`.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\ntraits <- read_csv(here::here(\"data/dog_breed_traits_clean.csv\"), show_col_types = FALSE)\n```\n:::\n\n\n\n\n2. Create a column of per-row means over all rating columns called _mean_ratings_ and assign to `traits2`.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntraits2 <- traits |> \n  rowwise() |> \n  mutate(mean_ratings = mean(c(affectionate, children, other_dogs, shedding, grooming, na.rm = TRUE)))\n```\n:::\n\n\n\n3. Convert _mean_ratings_ to a proportion in a column called _pmean_ratings_ and append to `traits2`.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntraits2 <- traits2 |> \n  mutate(pmean_ratings = mean_ratings / 5)\n```\n:::\n\n\n\n4. Apply a natural log transformation to the _pmeans_ratings_ vector.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlog(traits2$pmean_ratings)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  [1] -0.3101549 -0.4567584 -0.4054651 -0.3101549 -0.5679840 -0.4567584\n  [7] -0.4567584 -0.6286087 -0.4054651 -0.5679840 -0.4567584 -0.5679840\n [13] -0.4054651 -0.5679840 -0.6286087 -0.3101549 -0.4054651 -0.4567584\n [19] -0.3566749 -0.3566749 -0.4567584 -0.2231436 -0.5679840 -0.3566749\n [25] -0.7621401 -0.5108256 -0.3101549 -0.5108256 -0.3566749 -0.3101549\n [31] -0.3101549 -0.5108256 -0.5108256 -0.9162907 -0.4054651 -0.4567584\n [37] -0.6931472 -0.5679840 -0.4567584 -0.4567584 -0.3566749 -0.4567584\n [43] -0.5679840 -0.4054651 -0.3101549 -0.6286087 -0.3101549 -0.7621401\n [49] -0.3566749 -0.5679840 -0.5108256 -0.4567584 -0.4567584 -0.7621401\n [55] -0.6931472 -0.4054651 -0.6286087 -0.4567584 -0.4567584 -0.6286087\n [61] -0.6931472 -0.7621401 -0.4567584 -0.7621401 -0.6286087 -0.5679840\n [67] -0.4567584 -0.3566749 -0.5108256 -0.5679840 -0.5679840 -0.4567584\n [73] -0.6931472 -0.5108256 -0.3101549 -0.4567584 -0.5679840 -0.6286087\n [79] -0.7621401 -0.3101549 -0.5108256 -0.6931472 -0.4567584 -0.6286087\n [85] -0.8362480 -0.8362480 -0.4054651 -0.5679840 -0.5679840 -0.4054651\n [91] -0.5679840 -0.5108256 -0.5679840 -0.5679840 -0.5108256 -0.3101549\n [97] -0.5679840 -0.3101549 -0.5108256 -0.6931472 -0.4054651 -0.3566749\n[103] -0.6931472 -0.4567584 -0.6931472 -0.6931472 -0.5679840 -0.5679840\n[109] -0.4567584 -0.5108256 -0.4567584 -0.4567584 -0.5679840 -0.5679840\n[115] -0.5108256 -0.4567584 -0.6931472 -0.4567584 -0.4054651 -0.6931472\n[121] -0.5679840 -0.6931472 -0.5679840 -0.5679840 -0.3101549 -0.5679840\n[127] -0.4054651 -0.4054651 -0.6286087 -0.4567584 -0.7621401 -0.5679840\n[133] -0.6286087 -0.6931472 -0.6286087 -0.6286087 -0.5679840 -0.3101549\n[139] -0.6286087 -0.5108256 -0.7621401 -0.6931472 -0.5108256 -0.6931472\n[145] -0.4567584 -0.3566749 -0.4054651 -0.5108256 -0.5108256 -0.6931472\n[151] -0.7621401 -0.5108256 -0.4054651 -0.4054651 -0.5108256 -0.6931472\n[157] -0.3566749 -0.7621401 -0.5679840 -0.4054651 -0.5108256 -0.5679840\n[163] -0.6286087 -0.4567584 -0.4567584 -0.5108256 -0.5679840 -0.5679840\n[169] -0.5679840 -0.4054651 -0.5679840 -0.5108256 -0.9162907 -0.6286087\n[175] -0.5108256 -0.6286087 -0.5679840 -0.6286087 -0.7621401 -0.4567584\n[181] -0.6286087 -0.5679840 -0.5108256 -0.6286087 -0.6931472 -0.3566749\n[187] -0.4054651 -0.5108256 -0.6931472 -0.4054651 -0.5679840 -0.5108256\n[193] -0.7621401 -0.4054651 -0.6931472         NA -0.4054651\n```\n\n\n:::\n:::\n\n\n\n5. Round _pmean_ratings_ to two decimal places.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nround(traits2$pmean_ratings, digits = 2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  [1] 0.73 0.63 0.67 0.73 0.57 0.63 0.63 0.53 0.67 0.57 0.63 0.57 0.67 0.57 0.53\n [16] 0.73 0.67 0.63 0.70 0.70 0.63 0.80 0.57 0.70 0.47 0.60 0.73 0.60 0.70 0.73\n [31] 0.73 0.60 0.60 0.40 0.67 0.63 0.50 0.57 0.63 0.63 0.70 0.63 0.57 0.67 0.73\n [46] 0.53 0.73 0.47 0.70 0.57 0.60 0.63 0.63 0.47 0.50 0.67 0.53 0.63 0.63 0.53\n [61] 0.50 0.47 0.63 0.47 0.53 0.57 0.63 0.70 0.60 0.57 0.57 0.63 0.50 0.60 0.73\n [76] 0.63 0.57 0.53 0.47 0.73 0.60 0.50 0.63 0.53 0.43 0.43 0.67 0.57 0.57 0.67\n [91] 0.57 0.60 0.57 0.57 0.60 0.73 0.57 0.73 0.60 0.50 0.67 0.70 0.50 0.63 0.50\n[106] 0.50 0.57 0.57 0.63 0.60 0.63 0.63 0.57 0.57 0.60 0.63 0.50 0.63 0.67 0.50\n[121] 0.57 0.50 0.57 0.57 0.73 0.57 0.67 0.67 0.53 0.63 0.47 0.57 0.53 0.50 0.53\n[136] 0.53 0.57 0.73 0.53 0.60 0.47 0.50 0.60 0.50 0.63 0.70 0.67 0.60 0.60 0.50\n[151] 0.47 0.60 0.67 0.67 0.60 0.50 0.70 0.47 0.57 0.67 0.60 0.57 0.53 0.63 0.63\n[166] 0.60 0.57 0.57 0.57 0.67 0.57 0.60 0.40 0.53 0.60 0.53 0.57 0.53 0.47 0.63\n[181] 0.53 0.57 0.60 0.53 0.50 0.70 0.67 0.60 0.50 0.67 0.57 0.60 0.47 0.67 0.50\n[196]   NA 0.67\n```\n\n\n:::\n:::\n\n\n\n6. Convert _pmean_ratings_ to scientific notation.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nformat(traits2$pmean_ratings, scientific = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  [1] \"7.333333e-01\" \"6.333333e-01\" \"6.666667e-01\" \"7.333333e-01\" \"5.666667e-01\"\n  [6] \"6.333333e-01\" \"6.333333e-01\" \"5.333333e-01\" \"6.666667e-01\" \"5.666667e-01\"\n [11] \"6.333333e-01\" \"5.666667e-01\" \"6.666667e-01\" \"5.666667e-01\" \"5.333333e-01\"\n [16] \"7.333333e-01\" \"6.666667e-01\" \"6.333333e-01\" \"7.000000e-01\" \"7.000000e-01\"\n [21] \"6.333333e-01\" \"8.000000e-01\" \"5.666667e-01\" \"7.000000e-01\" \"4.666667e-01\"\n [26] \"6.000000e-01\" \"7.333333e-01\" \"6.000000e-01\" \"7.000000e-01\" \"7.333333e-01\"\n [31] \"7.333333e-01\" \"6.000000e-01\" \"6.000000e-01\" \"4.000000e-01\" \"6.666667e-01\"\n [36] \"6.333333e-01\" \"5.000000e-01\" \"5.666667e-01\" \"6.333333e-01\" \"6.333333e-01\"\n [41] \"7.000000e-01\" \"6.333333e-01\" \"5.666667e-01\" \"6.666667e-01\" \"7.333333e-01\"\n [46] \"5.333333e-01\" \"7.333333e-01\" \"4.666667e-01\" \"7.000000e-01\" \"5.666667e-01\"\n [51] \"6.000000e-01\" \"6.333333e-01\" \"6.333333e-01\" \"4.666667e-01\" \"5.000000e-01\"\n [56] \"6.666667e-01\" \"5.333333e-01\" \"6.333333e-01\" \"6.333333e-01\" \"5.333333e-01\"\n [61] \"5.000000e-01\" \"4.666667e-01\" \"6.333333e-01\" \"4.666667e-01\" \"5.333333e-01\"\n [66] \"5.666667e-01\" \"6.333333e-01\" \"7.000000e-01\" \"6.000000e-01\" \"5.666667e-01\"\n [71] \"5.666667e-01\" \"6.333333e-01\" \"5.000000e-01\" \"6.000000e-01\" \"7.333333e-01\"\n [76] \"6.333333e-01\" \"5.666667e-01\" \"5.333333e-01\" \"4.666667e-01\" \"7.333333e-01\"\n [81] \"6.000000e-01\" \"5.000000e-01\" \"6.333333e-01\" \"5.333333e-01\" \"4.333333e-01\"\n [86] \"4.333333e-01\" \"6.666667e-01\" \"5.666667e-01\" \"5.666667e-01\" \"6.666667e-01\"\n [91] \"5.666667e-01\" \"6.000000e-01\" \"5.666667e-01\" \"5.666667e-01\" \"6.000000e-01\"\n [96] \"7.333333e-01\" \"5.666667e-01\" \"7.333333e-01\" \"6.000000e-01\" \"5.000000e-01\"\n[101] \"6.666667e-01\" \"7.000000e-01\" \"5.000000e-01\" \"6.333333e-01\" \"5.000000e-01\"\n[106] \"5.000000e-01\" \"5.666667e-01\" \"5.666667e-01\" \"6.333333e-01\" \"6.000000e-01\"\n[111] \"6.333333e-01\" \"6.333333e-01\" \"5.666667e-01\" \"5.666667e-01\" \"6.000000e-01\"\n[116] \"6.333333e-01\" \"5.000000e-01\" \"6.333333e-01\" \"6.666667e-01\" \"5.000000e-01\"\n[121] \"5.666667e-01\" \"5.000000e-01\" \"5.666667e-01\" \"5.666667e-01\" \"7.333333e-01\"\n[126] \"5.666667e-01\" \"6.666667e-01\" \"6.666667e-01\" \"5.333333e-01\" \"6.333333e-01\"\n[131] \"4.666667e-01\" \"5.666667e-01\" \"5.333333e-01\" \"5.000000e-01\" \"5.333333e-01\"\n[136] \"5.333333e-01\" \"5.666667e-01\" \"7.333333e-01\" \"5.333333e-01\" \"6.000000e-01\"\n[141] \"4.666667e-01\" \"5.000000e-01\" \"6.000000e-01\" \"5.000000e-01\" \"6.333333e-01\"\n[146] \"7.000000e-01\" \"6.666667e-01\" \"6.000000e-01\" \"6.000000e-01\" \"5.000000e-01\"\n[151] \"4.666667e-01\" \"6.000000e-01\" \"6.666667e-01\" \"6.666667e-01\" \"6.000000e-01\"\n[156] \"5.000000e-01\" \"7.000000e-01\" \"4.666667e-01\" \"5.666667e-01\" \"6.666667e-01\"\n[161] \"6.000000e-01\" \"5.666667e-01\" \"5.333333e-01\" \"6.333333e-01\" \"6.333333e-01\"\n[166] \"6.000000e-01\" \"5.666667e-01\" \"5.666667e-01\" \"5.666667e-01\" \"6.666667e-01\"\n[171] \"5.666667e-01\" \"6.000000e-01\" \"4.000000e-01\" \"5.333333e-01\" \"6.000000e-01\"\n[176] \"5.333333e-01\" \"5.666667e-01\" \"5.333333e-01\" \"4.666667e-01\" \"6.333333e-01\"\n[181] \"5.333333e-01\" \"5.666667e-01\" \"6.000000e-01\" \"5.333333e-01\" \"5.000000e-01\"\n[186] \"7.000000e-01\" \"6.666667e-01\" \"6.000000e-01\" \"5.000000e-01\" \"6.666667e-01\"\n[191] \"5.666667e-01\" \"6.000000e-01\" \"4.666667e-01\" \"6.666667e-01\" \"5.000000e-01\"\n[196] \"          NA\" \"6.666667e-01\"\n```\n\n\n:::\n:::\n\n\n\n7. Sum up the total grooming ratings for each coat type.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntraits |> \n  count(coat_type, wt = grooming)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 × 2\n   coat_type     n\n   <chr>     <dbl>\n 1 Corded       14\n 2 Curly        21\n 3 Double      171\n 4 Hairless      4\n 5 Rough         8\n 6 Silky        30\n 7 Smooth      113\n 8 Wavy         15\n 9 Wiry         69\n10 <NA>          2\n```\n\n\n:::\n:::\n\n\n\n\n8. Add inline R code to the following sentence in R Markdown to say how many rows have `NA` for _grooming_:\n\nWe are missing grooming data for [insert inline R code] breeds.\n",
    "supporting": [
      "19_numbers_answers_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}