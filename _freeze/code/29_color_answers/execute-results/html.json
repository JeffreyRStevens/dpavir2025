{
  "hash": "5a431ee63b294a6676822498b5e83212",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Color\"\nauthor: \"Jeffrey R. Stevens\"\ndate: \"2023-04-07\"\noutput: html_document\nexecute:\n  freeze: auto\n---\n\n\n\n\n1. Using the `mtcars` data, create a scatterplot of the fuel efficiency as a function of weight with color based on the number of cylinders.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nmtcars |> \n  mutate(cyl = as.factor(cyl)) |> \n  ggplot(aes(x = wt, y = mpg, color = cyl)) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](29_color_answers_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n\n\n\n2. Repeat the scatterplot but use `scale_color_brewer()` to set the palette to _Set1_.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmtcars |> \n  mutate(cyl = as.factor(cyl)) |> \n  ggplot(aes(x = wt, y = mpg, color = cyl)) +\n  geom_point() +\n  scale_color_brewer(palette = \"Set1\")\n```\n\n::: {.cell-output-display}\n![](29_color_answers_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n\n3. Why did you use `scale_color_brewer()` not `scale_fill_brewer()` or `scale_color_distiller()`?\n\n\n4. Repeat scatterplot #1 but use `scale_color_manual()` to set the three colors to _red_, _green_, and _blue_.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmtcars |> \n  mutate(cyl = as.factor(cyl)) |> \n  ggplot(aes(x = wt, y = mpg, color = cyl)) +\n  geom_point() +\n  scale_color_manual(values = c(\"red\", \"green\", \"blue\"))\n```\n\n::: {.cell-output-display}\n![](29_color_answers_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n\n5. Find three colors (either names or hex codes), and repeat scatterplot #4 with your own colors.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmtcars |> \n  mutate(cyl = as.factor(cyl)) |> \n  ggplot(aes(x = wt, y = mpg, color = cyl)) +\n  geom_point() +\n  scale_color_manual(values = c(\"coral2\", \"palegreen4\", \"slateblue4\"))\n```\n\n::: {.cell-output-display}\n![](29_color_answers_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n\n\n6. Using the `mtcars` data, create a scatterplot of the fuel efficiency as a function of weight with color based on horsepower using the _BuPu_ palette and reverse the direction of the gradient.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmtcars |> \n  ggplot(aes(x = wt, y = mpg, color = hp)) +\n  geom_point() +\n  scale_color_distiller(palette = \"BuPu\", direction = 2)\n```\n\n::: {.cell-output-display}\n![](29_color_answers_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\n7. Create a new column in `mtcars` that centers and scales displacement with the `scale()` function. Create a scatterplot of fuel efficiency as a function of weight with color based on the rescaled displacement, using a diverging scale of your choice.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmtcars |> \n  mutate(disp2 = scale(disp)) |> \n  ggplot(aes(x = wt, y = mpg, color = disp2)) +\n  geom_point() +\n  scale_color_distiller(palette = \"RdBu\")\n```\n\n::: {.cell-output-display}\n![](29_color_answers_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "29_color_answers_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}