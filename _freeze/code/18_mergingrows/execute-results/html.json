{
  "hash": "3f73ec869437a06cccadfb4df716687f",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Merging rows\"\nauthor: \"Jeffrey R. Stevens\"\ndate: \"2025-03-03\"\noutput: html_document\nexecute:\n  freeze: auto\n---\n\n\n\n\nFor these exercises, we'll use the dog breed traits and dog breed popularity rankings data sets. \n\n1. Load tidyverse, import [`dog_breed_traits_clean.csv`](https://jeffreyrstevens.github.io/dpavir2025/data/dog_breed_traits_clean.csv) to `traits`, import [`dog_breed_ranks.csv`](https://jeffreyrstevens.github.io/dpavir2025/data/dog_breed_ranks.csv) to `ranks`, and import [`dog_breed_popularity.csv`](https://jeffreyrstevens.github.io/dpavir2025/data/dog_breed_popularity.csv) to `popularity`.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# >\n```\n:::\n\n\n\n\n\n2. First, set a random seed by using `set.seed(2)`. Then create a subset of `ranks` that is a random selection of 10% of the rows, sort by breed name, and assign to `ranks2`.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# >\n```\n:::\n\n\n\n\n\n3. Use a filtering join to return the subset of `traits` that _matches_ the breeds in `ranks2` and assign this to `traits2`.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# >\n```\n:::\n\n\n\n\n\n4. Use a filtering join to return the subset of `traits` that _excludes_ the breeds in `ranks2`.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# >\n```\n:::\n\n\n\n\n\n5. Now we want to filter `traits` based on breeds in `popularity`. Notice that the breeds column in `popularity` is called _Breed_. This is problematic because the breed column in `traits` is called _breed_ and names are case-sensitive. Use `join_by()` to filter `traits` by breeds in `popularity`. How many rows are there?\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# >\n```\n:::\n\n\n\n\n\n6. Use `filter()` (not joins) to return the subset of `traits` that _excludes_ the breeds in `ranks2`.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# >\n```\n:::\n\n\n\n\n\n7. Append `traits2` to the bottom of itself.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# >\n```\n:::\n\n\n\n\n\n8. Append `traits2` to the right of itself.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# >\n```\n:::\n\n\n\n\n\n9. Append `traits2` to the right of `ranks2`. \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# >\n```\n:::\n\n\n\n\n\n10. Why is this not a good idea? What would be a better way to achieve this?\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# >\n```\n:::\n",
    "supporting": [
      "18_mergingrows_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}