{
  "hash": "02a15e19506d9d84fd5b39f6cecffc60",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Merging columns\"\nauthor: \"Jeffrey R. Stevens\"\ndate: \"2023-03-01\"\noutput: html_document\nexecute:\n  freeze: auto\n---\n\n\n\nFor these exercises, we'll use the dog breed traits data set along with the data on breed popularity rankings. \n\n1. Load tidyverse, download and import [`dog_breed_traits_clean.csv`](https://jeffreyrstevens.github.io/dpavir2025/data/dog_breed_traits_clean.csv) to `traits`, and import [`dog_breed_ranks.csv`](https://jeffreyrstevens.github.io/dpavir2025/data/dog_breed_ranks.csv) to `ranks`. **Make sure to download both files from the website, as they have changed or are new.**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\ntraits <- read_csv(here::here(\"data/dog_breed_traits_clean.csv\"), show_col_types = FALSE)\nranks <- read_csv(here::here(\"data/dog_breed_ranks.csv\"), show_col_types = FALSE)\n```\n:::\n\n\n\n2. Which breeds differ between `traits` and `ranks`?\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntraits$breed[!traits$breed %in% ranks$breed]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"American Rearsniffer\" \"English Buttdragger\" \n```\n\n\n:::\n\n```{.r .cell-code}\nranks$breed[!ranks$breed %in% traits$breed]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Bergamasco\" \"Pumi\"       \"Puli\"      \n```\n\n\n:::\n:::\n\n\n\n3. Merge `traits` and `ranks` (in that order) to produce a data frame that includes breeds shared by both data sets. How many rows are there?\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntraits |> \n  inner_join(ranks, by = \"breed\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 195 × 16\n   breed            affectionate children other_dogs shedding grooming coat_type\n   <chr>                   <dbl>    <dbl>      <dbl>    <dbl>    <dbl> <chr>    \n 1 Retrievers (Lab…            5        5          5        4        2 Double   \n 2 French Bulldogs             5        5          4        3        1 Smooth   \n 3 German Shepherd…            5        5          3        4        2 Double   \n 4 Retrievers (Gol…            5        5          5        4        2 Double   \n 5 Bulldogs                    4        3          3        3        3 Smooth   \n 6 Poodles                     5        5          3        1        4 Curly    \n 7 Beagles                     3        5          5        3        2 Smooth   \n 8 Rottweilers                 5        3          3        3        1 Smooth   \n 9 Pointers (Germa…            5        5          4        3        2 Smooth   \n10 Dachshunds                  5        3          4        2        2 Smooth   \n# ℹ 185 more rows\n# ℹ 9 more variables: coat_length <chr>, `2013 Rank` <dbl>, `2014 Rank` <dbl>,\n#   `2015 Rank` <dbl>, `2016 Rank` <dbl>, `2017 Rank` <dbl>, `2018 Rank` <dbl>,\n#   `2019 Rank` <dbl>, `2020 Rank` <dbl>\n```\n\n\n:::\n:::\n\n\n\n\n4. Merge `traits` and `ranks` (in that order) to produce a data frame that includes all breeds included in either data set. How many rows are there?\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntraits |> \n  full_join(ranks, by = \"breed\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 200 × 16\n   breed            affectionate children other_dogs shedding grooming coat_type\n   <chr>                   <dbl>    <dbl>      <dbl>    <dbl>    <dbl> <chr>    \n 1 Retrievers (Lab…            5        5          5        4        2 Double   \n 2 French Bulldogs             5        5          4        3        1 Smooth   \n 3 German Shepherd…            5        5          3        4        2 Double   \n 4 Retrievers (Gol…            5        5          5        4        2 Double   \n 5 Bulldogs                    4        3          3        3        3 Smooth   \n 6 Poodles                     5        5          3        1        4 Curly    \n 7 Beagles                     3        5          5        3        2 Smooth   \n 8 Rottweilers                 5        3          3        3        1 Smooth   \n 9 Pointers (Germa…            5        5          4        3        2 Smooth   \n10 Dachshunds                  5        3          4        2        2 Smooth   \n# ℹ 190 more rows\n# ℹ 9 more variables: coat_length <chr>, `2013 Rank` <dbl>, `2014 Rank` <dbl>,\n#   `2015 Rank` <dbl>, `2016 Rank` <dbl>, `2017 Rank` <dbl>, `2018 Rank` <dbl>,\n#   `2019 Rank` <dbl>, `2020 Rank` <dbl>\n```\n\n\n:::\n:::\n\n\n\n5. Merge `traits` and `ranks` (in that order) to produce a data frame that includes only breeds included in `traits`. How many rows are there?\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntraits |> \n  left_join(ranks, by = \"breed\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 197 × 16\n   breed            affectionate children other_dogs shedding grooming coat_type\n   <chr>                   <dbl>    <dbl>      <dbl>    <dbl>    <dbl> <chr>    \n 1 Retrievers (Lab…            5        5          5        4        2 Double   \n 2 French Bulldogs             5        5          4        3        1 Smooth   \n 3 German Shepherd…            5        5          3        4        2 Double   \n 4 Retrievers (Gol…            5        5          5        4        2 Double   \n 5 Bulldogs                    4        3          3        3        3 Smooth   \n 6 Poodles                     5        5          3        1        4 Curly    \n 7 Beagles                     3        5          5        3        2 Smooth   \n 8 Rottweilers                 5        3          3        3        1 Smooth   \n 9 Pointers (Germa…            5        5          4        3        2 Smooth   \n10 Dachshunds                  5        3          4        2        2 Smooth   \n# ℹ 187 more rows\n# ℹ 9 more variables: coat_length <chr>, `2013 Rank` <dbl>, `2014 Rank` <dbl>,\n#   `2015 Rank` <dbl>, `2016 Rank` <dbl>, `2017 Rank` <dbl>, `2018 Rank` <dbl>,\n#   `2019 Rank` <dbl>, `2020 Rank` <dbl>\n```\n\n\n:::\n:::\n\n\n\n5. Merge `traits` and `ranks` (in that order) to produce a data frame that includes only breeds included in `ranks`. How many rows are there?\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntraits |> \n  right_join(ranks, by = \"breed\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 198 × 16\n   breed            affectionate children other_dogs shedding grooming coat_type\n   <chr>                   <dbl>    <dbl>      <dbl>    <dbl>    <dbl> <chr>    \n 1 Retrievers (Lab…            5        5          5        4        2 Double   \n 2 French Bulldogs             5        5          4        3        1 Smooth   \n 3 German Shepherd…            5        5          3        4        2 Double   \n 4 Retrievers (Gol…            5        5          5        4        2 Double   \n 5 Bulldogs                    4        3          3        3        3 Smooth   \n 6 Poodles                     5        5          3        1        4 Curly    \n 7 Beagles                     3        5          5        3        2 Smooth   \n 8 Rottweilers                 5        3          3        3        1 Smooth   \n 9 Pointers (Germa…            5        5          4        3        2 Smooth   \n10 Dachshunds                  5        3          4        2        2 Smooth   \n# ℹ 188 more rows\n# ℹ 9 more variables: coat_length <chr>, `2013 Rank` <dbl>, `2014 Rank` <dbl>,\n#   `2015 Rank` <dbl>, `2016 Rank` <dbl>, `2017 Rank` <dbl>, `2018 Rank` <dbl>,\n#   `2019 Rank` <dbl>, `2020 Rank` <dbl>\n```\n\n\n:::\n:::\n\n\n\n6. Make `table4a` and `table4b` tidy then join them to replicate `table1`.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable4a_tidy <- pivot_longer(table4a, -country, names_to = \"year\", values_to = \"cases\")\ntable4b_tidy <- pivot_longer(table4b, -country, names_to = \"year\", values_to = \"population\")\nleft_join(table4a_tidy, table4b_tidy)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nJoining with `by = join_by(country, year)`\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 4\n  country     year   cases population\n  <chr>       <chr>  <dbl>      <dbl>\n1 Afghanistan 1999     745   19987071\n2 Afghanistan 2000    2666   20595360\n3 Brazil      1999   37737  172006362\n4 Brazil      2000   80488  174504898\n5 China       1999  212258 1272915272\n6 China       2000  213766 1280428583\n```\n\n\n:::\n:::\n",
    "supporting": [
      "17_mergingcolumns_answers_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}