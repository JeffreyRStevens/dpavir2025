{
  "hash": "4d7dac48649bc0a34a7f02b5ab7358c1",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Summarizing rows\"\nauthor: \"Jeffrey R. Stevens\"\ndate: \"2023-02-22\"\noutput: html_document\nexecute:\n  freeze: auto\n---\n\n\n\nFor these exercises, we'll use a new clean version of the dog breed traits data set. \n\n1. Import data from <https://jeffreyrstevens.quarto.pub/dpavir/data/dog_breed_traits_clean.csv> and assign to `traits`.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\ntraits <- read_csv(\"https://jeffreyrstevens.quarto.pub/dpavir/data/dog_breed_traits_clean.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 197 Columns: 8\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): breed, coat_type, coat_length\ndbl (5): affectionate, children, other_dogs, shedding, grooming\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n:::\n\n\n\n2. What is the overall mean rating for _affectionate_?\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummarise(traits, mean(affectionate))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 1\n  `mean(affectionate)`\n                 <dbl>\n1                 4.50\n```\n\n\n:::\n:::\n\n\n\n3. What is the overall mean rating for all rating columns ignoring `NA`s? \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummarise(traits, across(affectionate:grooming, ~ mean(.x, na.rm = TRUE)))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 5\n  affectionate children other_dogs shedding grooming\n         <dbl>    <dbl>      <dbl>    <dbl>    <dbl>\n1         4.50     3.88       3.55     2.61     2.28\n```\n\n\n:::\n:::\n\n\n\n4. How many breeds are there in each coat type?\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncount(traits, coat_type)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 × 2\n   coat_type     n\n   <chr>     <int>\n 1 Corded        4\n 2 Curly         7\n 3 Double       66\n 4 Hairless      3\n 5 Rough         4\n 6 Silky         9\n 7 Smooth       67\n 8 Wavy          6\n 9 Wiry         30\n10 <NA>          1\n```\n\n\n:::\n:::\n\n\n\n5. What is the median grooming rating for each coat type?\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntraits |> \n  group_by(coat_type) |> \n  summarise(median(grooming, na.rm = TRUE))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 × 2\n   coat_type `median(grooming, na.rm = TRUE)`\n   <chr>                                <dbl>\n 1 Corded                                 4  \n 2 Curly                                  3  \n 3 Double                                 2.5\n 4 Hairless                               1  \n 5 Rough                                  2  \n 6 Silky                                  3  \n 7 Smooth                                 2  \n 8 Wavy                                   2  \n 9 Wiry                                   2  \n10 <NA>                                   2  \n```\n\n\n:::\n:::\n\n\n\n6. What is the lowest rating per coat length for each of the rating columns, ignoring `NA`s?\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntraits |> \n  group_by(coat_length) |> \n  summarise(across(affectionate:grooming, ~ min(.x, na.rm = TRUE)))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4 × 6\n  coat_length affectionate children other_dogs shedding grooming\n  <chr>              <dbl>    <dbl>      <dbl>    <dbl>    <dbl>\n1 Long                   3        3          2        1        1\n2 Medium                 3        2          1        1        1\n3 Short                  1        1          1        1        1\n4 <NA>                   4        5          5        3        2\n```\n\n\n:::\n:::\n\n\n\n7. What are the sample size, mean, and standard deviation of shedding ratings for medium coat length dogs per coat type sorted from largest to smallest sample size and only including coat types with 5 or more samples?\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntraits |> \n  filter(coat_length == \"Medium\") |> \n  group_by(coat_type) |> \n  summarise(n = n(), shedding_mean = mean(shedding), shedding_sd = sd(shedding)) |> \n  arrange(desc(n)) |> \n  filter(n > 4)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 4\n  coat_type     n shedding_mean shedding_sd\n  <chr>     <int>         <dbl>       <dbl>\n1 Double       39          3.03       0.707\n2 Wiry         19          2.53       0.612\n3 Curly         5          1.4        0.894\n4 Smooth        5          3          0    \n5 Wavy          5          1.8        0.837\n```\n\n\n:::\n:::\n\n\n\n8. Calculate each breed's mean rating across all ratings columns and return a data frame with the highest rating for each coat type. Don't forget to undo `rowwise()` with `ungroup()` before further calculations.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntraits |>\n  rowwise() |> \n  mutate(mean_rating = mean(c(affectionate, children, other_dogs, shedding, grooming), na.rm = TRUE)) |> \n  ungroup() |> \n  group_by(coat_type) |> \n  slice_max(mean_rating)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 16 × 9\n# Groups:   coat_type [10]\n   breed            affectionate children other_dogs shedding grooming coat_type\n   <chr>                   <dbl>    <dbl>      <dbl>    <dbl>    <dbl> <chr>    \n 1 Pulik                       5        3          3        1        5 Corded   \n 2 Spanish Water D…            5        4          3        1        4 Corded   \n 3 Portuguese Wate…            5        5          4        2        4 Curly    \n 4 Bernese Mountai…            5        5          5        5        3 Double   \n 5 American Hairle…            5        5          3        1        1 Hairless \n 6 American Rearsn…            5        2          4        5       NA Rough    \n 7 Setters (Irish)             5        5          5        3        3 Silky    \n 8 Bearded Collies             4        5          5        3        4 Silky    \n 9 Pugs                        5        5          4        4        2 Smooth   \n10 Retrievers (Fla…            5        5          5        3        2 Smooth   \n11 Redbone Coonhou…            5        5          5        3        2 Smooth   \n12 Chinooks                    4        5          5        3        3 Smooth   \n13 Cavalier King C…            5        5          5        2        2 Wavy     \n14 Miniature Schna…            5        5          3        3        4 Wiry     \n15 Portuguese Pode…            5        5          5        3        2 Wiry     \n16 English Buttdra…            4        5          5        3        2 <NA>     \n# ℹ 2 more variables: coat_length <chr>, mean_rating <dbl>\n```\n\n\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}