{
  "hash": "ebc77573787cd8daf8e8337d7983e109",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Strings\"\nauthor: \"Jeffrey R. Stevens\"\ndate: \"2023-03-08\"\noutput: html_document\nexecute:\n  freeze: auto\n---\n\n\n\nFor these exercises, we'll use the dog breed traits data set. \n\n1. Load tidyverse and import [`dog_breed_traits_clean.csv`](https://jeffreyrstevens.github.io/dpavir2025/data/dog_breed_traits_clean.csv) to `traits`.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\ntraits <- read_csv(here::here(\"data/dog_breed_traits_clean.csv\"), show_col_types = FALSE)\n```\n:::\n\n\n\n\n2. Return the first ten letters of the alphabet in upper case.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nLETTERS[1:10]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"A\" \"B\" \"C\" \"D\" \"E\" \"F\" \"G\" \"H\" \"I\" \"J\"\n```\n\n\n:::\n:::\n\n\n\n\n3. Create this character string and assign it to `mystring`: The elephant said \"Hello\" then 'Bye!'  Then view how it would be printed.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n(mystring <- \"The elephant said \\\"Hello\\\" then 'Bye'!\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"The elephant said \\\"Hello\\\" then 'Bye'!\"\n```\n\n\n:::\n\n```{.r .cell-code}\nwriteLines(mystring)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nThe elephant said \"Hello\" then 'Bye'!\n```\n\n\n:::\n:::\n\n\n\n\n4. Find how many characters are in `mystring`.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstr_length(mystring)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 37\n```\n\n\n:::\n:::\n\n\n\n\n5. Create a vector of the first four characters of the _coat_length_ column from `traits`.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstr_sub(traits$coat_length, 1, 4)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  [1] \"Shor\" \"Shor\" \"Medi\" \"Medi\" \"Shor\" \"Long\" \"Shor\" \"Shor\" \"Shor\" \"Shor\"\n [11] \"Shor\" \"Medi\" \"Long\" \"Shor\" \"Shor\" \"Medi\" \"Medi\" \"Shor\" \"Medi\" \"Long\"\n [21] \"Shor\" \"Medi\" \"Long\" \"Long\" \"Shor\" \"Medi\" \"Long\" \"Shor\" \"Shor\" \"Long\"\n [31] \"Medi\" \"Medi\" \"Shor\" \"Shor\" \"Shor\" \"Shor\" \"Shor\" \"Long\" \"Shor\" \"Shor\"\n [41] \"Medi\" \"Shor\" \"Shor\" \"Medi\" \"Long\" \"Shor\" \"Medi\" \"Medi\" \"Long\" \"Medi\"\n [51] \"Shor\" \"Shor\" \"Medi\" \"Shor\" \"Shor\" \"Long\" \"Medi\" \"Medi\" \"Shor\" \"Medi\"\n [61] \"Shor\" \"Shor\" \"Medi\" \"Shor\" \"Medi\" \"Medi\" \"Medi\" \"Long\" \"Shor\" \"Medi\"\n [71] \"Shor\" \"Shor\" \"Medi\" \"Medi\" \"Medi\" \"Shor\" \"Shor\" \"Long\" \"Shor\" \"Long\"\n [81] \"Shor\" \"Shor\" \"Shor\" \"Medi\" \"Shor\" \"Shor\" \"Medi\" \"Medi\" \"Shor\" \"Medi\"\n [91] \"Medi\" \"Medi\" \"Shor\" \"Medi\" \"Long\" \"Long\" \"Shor\" \"Long\" \"Long\" \"Shor\"\n[101] \"Medi\" \"Medi\" \"Medi\" \"Medi\" \"Shor\" \"Medi\" \"Medi\" \"Long\" \"Shor\" \"Medi\"\n[111] \"Medi\" \"Medi\" \"Shor\" \"Shor\" \"Shor\" \"Shor\" \"Medi\" \"Medi\" \"Medi\" \"Medi\"\n[121] \"Shor\" \"Long\" \"Shor\" \"Shor\" \"Long\" \"Medi\" \"Shor\" \"Medi\" \"Shor\" \"Shor\"\n[131] \"Shor\" \"Shor\" \"Medi\" \"Shor\" \"Medi\" \"Shor\" \"Shor\" \"Medi\" \"Shor\" \"Medi\"\n[141] \"Medi\" \"Shor\" \"Long\" \"Shor\" \"Medi\" \"Shor\" \"Shor\" \"Medi\" \"Medi\" \"Long\"\n[151] \"Medi\" \"Shor\" \"Shor\" \"Medi\" \"Shor\" \"Medi\" \"Medi\" \"Medi\" \"Shor\" \"Medi\"\n[161] \"Long\" \"Medi\" \"Shor\" \"Long\" \"Medi\" \"Medi\" \"Shor\" \"Medi\" \"Medi\" \"Medi\"\n[171] \"Shor\" \"Medi\" \"Long\" \"Medi\" \"Long\" \"Medi\" \"Medi\" \"Long\" \"Shor\" \"Shor\"\n[181] \"Medi\" \"Medi\" \"Long\" \"Shor\" \"Shor\" \"Medi\" \"Medi\" \"Medi\" \"Shor\" \"Shor\"\n[191] \"Medi\" \"Shor\" \"Shor\" \"Shor\" \"Shor\" \"Medi\" NA    \n```\n\n\n:::\n:::\n\n\n\n\n6. Convert the _breed_ column of `traits` to sentence case.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstr_to_sentence(traits$breed)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  [1] \"Retrievers (labrador)\"                \n  [2] \"French bulldogs\"                      \n  [3] \"German shepherd dogs\"                 \n  [4] \"Retrievers (golden)\"                  \n  [5] \"Bulldogs\"                             \n  [6] \"Poodles\"                              \n  [7] \"Beagles\"                              \n  [8] \"Rottweilers\"                          \n  [9] \"Pointers (german shorthaired)\"        \n [10] \"Dachshunds\"                           \n [11] \"Pembroke welsh corgis\"                \n [12] \"Australian shepherds\"                 \n [13] \"Yorkshire terriers\"                   \n [14] \"Boxers\"                               \n [15] \"Great danes\"                          \n [16] \"Siberian huskies\"                     \n [17] \"Cavalier king charles spaniels\"       \n [18] \"Doberman pinschers\"                   \n [19] \"Miniature schnauzers\"                 \n [20] \"Shih tzu\"                             \n [21] \"Boston terriers\"                      \n [22] \"Bernese mountain dogs\"                \n [23] \"Pomeranians\"                          \n [24] \"Havanese\"                             \n [25] \"Cane corso\"                           \n [26] \"Spaniels (english springer)\"          \n [27] \"Shetland sheepdogs\"                   \n [28] \"Brittanys\"                            \n [29] \"Pugs\"                                 \n [30] \"Spaniels (cocker)\"                    \n [31] \"Miniature american shepherds\"         \n [32] \"Border collies\"                       \n [33] \"Mastiffs\"                             \n [34] \"Chihuahuas\"                           \n [35] \"Vizslas\"                              \n [36] \"Basset hounds\"                        \n [37] \"Belgian malinois\"                     \n [38] \"Maltese\"                              \n [39] \"Weimaraners\"                          \n [40] \"Collies\"                              \n [41] \"Newfoundlands\"                        \n [42] \"Rhodesian ridgebacks\"                 \n [43] \"Shiba inu\"                            \n [44] \"West highland white terriers\"         \n [45] \"Bichons frises\"                       \n [46] \"Bloodhounds\"                          \n [47] \"Spaniels (english cocker)\"            \n [48] \"Akitas\"                               \n [49] \"Portuguese water dogs\"                \n [50] \"Retrievers (chesapeake bay)\"          \n [51] \"Dalmatians\"                           \n [52] \"St. Bernards\"                         \n [53] \"Papillons\"                            \n [54] \"Australian cattle dogs\"               \n [55] \"Bullmastiffs\"                         \n [56] \"Samoyeds\"                             \n [57] \"Scottish terriers\"                    \n [58] \"Soft coated wheaten terriers\"         \n [59] \"Whippets\"                             \n [60] \"Pointers (german wirehaired)\"         \n [61] \"Chinese shar-pei\"                     \n [62] \"Airedale terriers\"                    \n [63] \"Wirehaired pointing griffons\"         \n [64] \"Bull terriers\"                        \n [65] \"Alaskan malamutes\"                    \n [66] \"Cardigan welsh corgis\"                \n [67] \"Giant schnauzers\"                     \n [68] \"Old english sheepdogs\"                \n [69] \"Italian greyhounds\"                   \n [70] \"Great pyrenees\"                       \n [71] \"Dogues de bordeaux\"                   \n [72] \"Russell terriers\"                     \n [73] \"Cairn terriers\"                       \n [74] \"Irish wolfhounds\"                     \n [75] \"Setters (irish)\"                      \n [76] \"Greater swiss mountain dogs\"          \n [77] \"Miniature pinschers\"                  \n [78] \"Lhasa apsos\"                          \n [79] \"Chinese crested\"                      \n [80] \"Coton de tulear\"                      \n [81] \"Staffordshire bull terriers\"          \n [82] \"American staffordshire terriers\"      \n [83] \"Rat terriers\"                         \n [84] \"Chow chows\"                           \n [85] \"Anatolian shepherd dogs\"              \n [86] \"Basenjis\"                             \n [87] \"Spaniels (boykin)\"                    \n [88] \"Lagotti romagnoli\"                    \n [89] \"Brussels griffons\"                    \n [90] \"Retrievers (nova scotia duck tolling)\"\n [91] \"Norwegian elkhounds\"                  \n [92] \"Standard schnauzers\"                  \n [93] \"Dogo argentinos\"                      \n [94] \"Bouviers des flandres\"                \n [95] \"Pekingese\"                            \n [96] \"Keeshonden\"                           \n [97] \"Border terriers\"                      \n [98] \"Leonbergers\"                          \n [99] \"Tibetan terriers\"                     \n[100] \"Neapolitan mastiffs\"                  \n[101] \"Setters (english)\"                    \n[102] \"Retrievers (flat-coated)\"             \n[103] \"Borzois\"                              \n[104] \"Fox terriers (wire)\"                  \n[105] \"Miniature bull terriers\"              \n[106] \"Belgian tervuren\"                     \n[107] \"Setters (gordon)\"                     \n[108] \"Silky terriers\"                       \n[109] \"Norwich terriers\"                     \n[110] \"Spinoni italiani\"                     \n[111] \"Japanese chin\"                        \n[112] \"Welsh terriers\"                       \n[113] \"Toy fox terriers\"                     \n[114] \"Schipperkes\"                          \n[115] \"Parson russell terriers\"              \n[116] \"Pointers\"                             \n[117] \"Belgian sheepdogs\"                    \n[118] \"Tibetan spaniels\"                     \n[119] \"American eskimo dogs\"                 \n[120] \"Irish terriers\"                       \n[121] \"Beaucerons\"                           \n[122] \"Afghan hounds\"                        \n[123] \"Boerboels\"                            \n[124] \"Fox terriers (smooth)\"                \n[125] \"Bearded collies\"                      \n[126] \"Black russian terriers\"               \n[127] \"Black and tan coonhounds\"             \n[128] \"Spaniels (welsh springer)\"            \n[129] \"American hairless terriers\"           \n[130] \"Norfolk terriers\"                     \n[131] \"Xoloitzcuintli\"                       \n[132] \"Manchester terriers\"                  \n[133] \"Kerry blue terriers\"                  \n[134] \"Australian terriers\"                  \n[135] \"Spaniels (clumber)\"                   \n[136] \"Lakeland terriers\"                    \n[137] \"Bluetick coonhounds\"                  \n[138] \"English toy spaniels\"                 \n[139] \"German pinschers\"                     \n[140] \"Tibetan mastiffs\"                     \n[141] \"Bedlington terriers\"                  \n[142] \"Greyhounds\"                           \n[143] \"Pulik\"                                \n[144] \"Salukis\"                              \n[145] \"Barbets\"                              \n[146] \"Redbone coonhounds\"                   \n[147] \"Swedish vallhunds\"                    \n[148] \"Sealyham terriers\"                    \n[149] \"Spanish water dogs\"                   \n[150] \"Briards\"                              \n[151] \"Berger picards\"                       \n[152] \"Entlebucher mountain dogs\"            \n[153] \"Treeing walker coonhounds\"            \n[154] \"Icelandic sheepdogs\"                  \n[155] \"Wirehaired vizslas\"                   \n[156] \"Pumik\"                                \n[157] \"Portuguese podengo pequenos\"          \n[158] \"Spaniels (american water)\"            \n[159] \"Retrievers (curly-coated)\"            \n[160] \"Spaniels (field)\"                     \n[161] \"Lowchen\"                              \n[162] \"Nederlandse kooikerhondjes\"           \n[163] \"Affenpinschers\"                       \n[164] \"Petits bassets griffons vendeens\"     \n[165] \"Finnish lapphunds\"                    \n[166] \"Scottish deerhounds\"                  \n[167] \"Plott hounds\"                         \n[168] \"Norwegian buhunds\"                    \n[169] \"Glen of imaal terriers\"               \n[170] \"Setters (irish red and white)\"        \n[171] \"Ibizan hounds\"                        \n[172] \"Spaniels (sussex)\"                    \n[173] \"Bergamasco sheepdogs\"                 \n[174] \"Spaniels (irish water)\"               \n[175] \"Polish lowland sheepdogs\"             \n[176] \"Otterhounds\"                          \n[177] \"Kuvaszok\"                             \n[178] \"Komondorok\"                           \n[179] \"Cirnechi dell etna\"                   \n[180] \"Pharaoh hounds\"                       \n[181] \"Dandie dinmont terriers\"              \n[182] \"Pyrenean shepherds\"                   \n[183] \"Skye terriers\"                        \n[184] \"Canaan dogs\"                          \n[185] \"American english coonhounds\"          \n[186] \"Chinooks\"                             \n[187] \"Finnish spitz\"                        \n[188] \"Grand basset griffon vendeens\"        \n[189] \"Sloughis\"                             \n[190] \"Harriers\"                             \n[191] \"Cesky terriers\"                       \n[192] \"American foxhounds\"                   \n[193] \"Azawakhs\"                             \n[194] \"English foxhounds\"                    \n[195] \"Norwegian lundehunds\"                 \n[196] \"American rearsniffer\"                 \n[197] \"English buttdragger\"                  \n```\n\n\n:::\n:::\n\n\n\n\n7. Create series of sentences using _breed_ and _coat_length_ that states \"[insert breed name] have a [insert coat length] coat\" that uses the proper cases.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstr_glue(\"{traits$breed} have a {str_to_lower(traits$coat_length)} coat\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRetrievers (Labrador) have a short coat\nFrench Bulldogs have a short coat\nGerman Shepherd Dogs have a medium coat\nRetrievers (Golden) have a medium coat\nBulldogs have a short coat\nPoodles have a long coat\nBeagles have a short coat\nRottweilers have a short coat\nPointers (German Shorthaired) have a short coat\nDachshunds have a short coat\nPembroke Welsh Corgis have a short coat\nAustralian Shepherds have a medium coat\nYorkshire Terriers have a long coat\nBoxers have a short coat\nGreat Danes have a short coat\nSiberian Huskies have a medium coat\nCavalier King Charles Spaniels have a medium coat\nDoberman Pinschers have a short coat\nMiniature Schnauzers have a medium coat\nShih Tzu have a long coat\nBoston Terriers have a short coat\nBernese Mountain Dogs have a medium coat\nPomeranians have a long coat\nHavanese have a long coat\nCane Corso have a short coat\nSpaniels (English Springer) have a medium coat\nShetland Sheepdogs have a long coat\nBrittanys have a short coat\nPugs have a short coat\nSpaniels (Cocker) have a long coat\nMiniature American Shepherds have a medium coat\nBorder Collies have a medium coat\nMastiffs have a short coat\nChihuahuas have a short coat\nVizslas have a short coat\nBasset Hounds have a short coat\nBelgian Malinois have a short coat\nMaltese have a long coat\nWeimaraners have a short coat\nCollies have a short coat\nNewfoundlands have a medium coat\nRhodesian Ridgebacks have a short coat\nShiba Inu have a short coat\nWest Highland White Terriers have a medium coat\nBichons Frises have a long coat\nBloodhounds have a short coat\nSpaniels (English Cocker) have a medium coat\nAkitas have a medium coat\nPortuguese Water Dogs have a long coat\nRetrievers (Chesapeake Bay) have a medium coat\nDalmatians have a short coat\nSt. Bernards have a short coat\nPapillons have a medium coat\nAustralian Cattle Dogs have a short coat\nBullmastiffs have a short coat\nSamoyeds have a long coat\nScottish Terriers have a medium coat\nSoft Coated Wheaten Terriers have a medium coat\nWhippets have a short coat\nPointers (German Wirehaired) have a medium coat\nChinese Shar-Pei have a short coat\nAiredale Terriers have a short coat\nWirehaired Pointing Griffons have a medium coat\nBull Terriers have a short coat\nAlaskan Malamutes have a medium coat\nCardigan Welsh Corgis have a medium coat\nGiant Schnauzers have a medium coat\nOld English Sheepdogs have a long coat\nItalian Greyhounds have a short coat\nGreat Pyrenees have a medium coat\nDogues de Bordeaux have a short coat\nRussell Terriers have a short coat\nCairn Terriers have a medium coat\nIrish Wolfhounds have a medium coat\nSetters (Irish) have a medium coat\nGreater Swiss Mountain Dogs have a short coat\nMiniature Pinschers have a short coat\nLhasa Apsos have a long coat\nChinese Crested have a short coat\nCoton de Tulear have a long coat\nStaffordshire Bull Terriers have a short coat\nAmerican Staffordshire Terriers have a short coat\nRat Terriers have a short coat\nChow Chows have a medium coat\nAnatolian Shepherd Dogs have a short coat\nBasenjis have a short coat\nSpaniels (Boykin) have a medium coat\nLagotti Romagnoli have a medium coat\nBrussels Griffons have a short coat\nRetrievers (Nova Scotia Duck Tolling) have a medium coat\nNorwegian Elkhounds have a medium coat\nStandard Schnauzers have a medium coat\nDogo Argentinos have a short coat\nBouviers des Flandres have a medium coat\nPekingese have a long coat\nKeeshonden have a long coat\nBorder Terriers have a short coat\nLeonbergers have a long coat\nTibetan Terriers have a long coat\nNeapolitan Mastiffs have a short coat\nSetters (English) have a medium coat\nRetrievers (Flat-Coated) have a medium coat\nBorzois have a medium coat\nFox Terriers (Wire) have a medium coat\nMiniature Bull Terriers have a short coat\nBelgian Tervuren have a medium coat\nSetters (Gordon) have a medium coat\nSilky Terriers have a long coat\nNorwich Terriers have a short coat\nSpinoni Italiani have a medium coat\nJapanese Chin have a medium coat\nWelsh Terriers have a medium coat\nToy Fox Terriers have a short coat\nSchipperkes have a short coat\nParson Russell Terriers have a short coat\nPointers have a short coat\nBelgian Sheepdogs have a medium coat\nTibetan Spaniels have a medium coat\nAmerican Eskimo Dogs have a medium coat\nIrish Terriers have a medium coat\nBeaucerons have a short coat\nAfghan Hounds have a long coat\nBoerboels have a short coat\nFox Terriers (Smooth) have a short coat\nBearded Collies have a long coat\nBlack Russian Terriers have a medium coat\nBlack and Tan Coonhounds have a short coat\nSpaniels (Welsh Springer) have a medium coat\nAmerican Hairless Terriers have a short coat\nNorfolk Terriers have a short coat\nXoloitzcuintli have a short coat\nManchester Terriers have a short coat\nKerry Blue Terriers have a medium coat\nAustralian Terriers have a short coat\nSpaniels (Clumber) have a medium coat\nLakeland Terriers have a short coat\nBluetick Coonhounds have a short coat\nEnglish Toy Spaniels have a medium coat\nGerman Pinschers have a short coat\nTibetan Mastiffs have a medium coat\nBedlington Terriers have a medium coat\nGreyhounds have a short coat\nPulik have a long coat\nSalukis have a short coat\nBarbets have a medium coat\nRedbone Coonhounds have a short coat\nSwedish Vallhunds have a short coat\nSealyham Terriers have a medium coat\nSpanish Water Dogs have a medium coat\nBriards have a long coat\nBerger Picards have a medium coat\nEntlebucher Mountain Dogs have a short coat\nTreeing Walker Coonhounds have a short coat\nIcelandic Sheepdogs have a medium coat\nWirehaired Vizslas have a short coat\nPumik have a medium coat\nPortuguese Podengo Pequenos have a medium coat\nSpaniels (American Water) have a medium coat\nRetrievers (Curly-Coated) have a short coat\nSpaniels (Field) have a medium coat\nLowchen have a long coat\nNederlandse Kooikerhondjes have a medium coat\nAffenpinschers have a short coat\nPetits Bassets Griffons Vendeens have a long coat\nFinnish Lapphunds have a medium coat\nScottish Deerhounds have a medium coat\nPlott Hounds have a short coat\nNorwegian Buhunds have a medium coat\nGlen of Imaal Terriers have a medium coat\nSetters (Irish Red and White) have a medium coat\nIbizan Hounds have a short coat\nSpaniels (Sussex) have a medium coat\nBergamasco Sheepdogs have a long coat\nSpaniels (Irish Water) have a medium coat\nPolish Lowland Sheepdogs have a long coat\nOtterhounds have a medium coat\nKuvaszok have a medium coat\nKomondorok have a long coat\nCirnechi dell Etna have a short coat\nPharaoh Hounds have a short coat\nDandie Dinmont Terriers have a medium coat\nPyrenean Shepherds have a medium coat\nSkye Terriers have a long coat\nCanaan Dogs have a short coat\nAmerican English Coonhounds have a short coat\nChinooks have a medium coat\nFinnish Spitz have a medium coat\nGrand Basset Griffon Vendeens have a medium coat\nSloughis have a short coat\nHarriers have a short coat\nCesky Terriers have a medium coat\nAmerican Foxhounds have a short coat\nAzawakhs have a short coat\nEnglish Foxhounds have a short coat\nNorwegian Lundehunds have a short coat\nAmerican Rearsniffer have a medium coat\nEnglish Buttdragger have a NA coat\n```\n\n\n:::\n:::\n\n\n\n\n8. In the `mtcars` data set, extract the first two digits of the _mpg_ variable and the last three digits of the car names and combine them into a single string.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstr_glue(\"{str_sub(mtcars$mpg, 1, 2)}{str_sub(row.names(mtcars), -3, -1)}\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n21RX4\n21Wag\n22710\n21ive\n18out\n18ant\n14360\n2440D\n22230\n19280\n1780C\n160SE\n170SL\n15SLC\n10ood\n10tal\n14ial\n32128\n30vic\n33lla\n21ona\n15ger\n15lin\n13Z28\n19ird\n271-9\n264-2\n30opa\n15a L\n19ino\n15ora\n2142E\n```\n\n\n:::\n:::\n\n\n\n\n9. Print the `fruit` data set, then capitalize all first word letters in the data set, then capitalize all words in the data set.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfruit\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"apple\"             \"apricot\"           \"avocado\"          \n [4] \"banana\"            \"bell pepper\"       \"bilberry\"         \n [7] \"blackberry\"        \"blackcurrant\"      \"blood orange\"     \n[10] \"blueberry\"         \"boysenberry\"       \"breadfruit\"       \n[13] \"canary melon\"      \"cantaloupe\"        \"cherimoya\"        \n[16] \"cherry\"            \"chili pepper\"      \"clementine\"       \n[19] \"cloudberry\"        \"coconut\"           \"cranberry\"        \n[22] \"cucumber\"          \"currant\"           \"damson\"           \n[25] \"date\"              \"dragonfruit\"       \"durian\"           \n[28] \"eggplant\"          \"elderberry\"        \"feijoa\"           \n[31] \"fig\"               \"goji berry\"        \"gooseberry\"       \n[34] \"grape\"             \"grapefruit\"        \"guava\"            \n[37] \"honeydew\"          \"huckleberry\"       \"jackfruit\"        \n[40] \"jambul\"            \"jujube\"            \"kiwi fruit\"       \n[43] \"kumquat\"           \"lemon\"             \"lime\"             \n[46] \"loquat\"            \"lychee\"            \"mandarine\"        \n[49] \"mango\"             \"mulberry\"          \"nectarine\"        \n[52] \"nut\"               \"olive\"             \"orange\"           \n[55] \"pamelo\"            \"papaya\"            \"passionfruit\"     \n[58] \"peach\"             \"pear\"              \"persimmon\"        \n[61] \"physalis\"          \"pineapple\"         \"plum\"             \n[64] \"pomegranate\"       \"pomelo\"            \"purple mangosteen\"\n[67] \"quince\"            \"raisin\"            \"rambutan\"         \n[70] \"raspberry\"         \"redcurrant\"        \"rock melon\"       \n[73] \"salal berry\"       \"satsuma\"           \"star fruit\"       \n[76] \"strawberry\"        \"tamarillo\"         \"tangerine\"        \n[79] \"ugli fruit\"        \"watermelon\"       \n```\n\n\n:::\n\n```{.r .cell-code}\nstr_to_sentence(fruit)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"Apple\"             \"Apricot\"           \"Avocado\"          \n [4] \"Banana\"            \"Bell pepper\"       \"Bilberry\"         \n [7] \"Blackberry\"        \"Blackcurrant\"      \"Blood orange\"     \n[10] \"Blueberry\"         \"Boysenberry\"       \"Breadfruit\"       \n[13] \"Canary melon\"      \"Cantaloupe\"        \"Cherimoya\"        \n[16] \"Cherry\"            \"Chili pepper\"      \"Clementine\"       \n[19] \"Cloudberry\"        \"Coconut\"           \"Cranberry\"        \n[22] \"Cucumber\"          \"Currant\"           \"Damson\"           \n[25] \"Date\"              \"Dragonfruit\"       \"Durian\"           \n[28] \"Eggplant\"          \"Elderberry\"        \"Feijoa\"           \n[31] \"Fig\"               \"Goji berry\"        \"Gooseberry\"       \n[34] \"Grape\"             \"Grapefruit\"        \"Guava\"            \n[37] \"Honeydew\"          \"Huckleberry\"       \"Jackfruit\"        \n[40] \"Jambul\"            \"Jujube\"            \"Kiwi fruit\"       \n[43] \"Kumquat\"           \"Lemon\"             \"Lime\"             \n[46] \"Loquat\"            \"Lychee\"            \"Mandarine\"        \n[49] \"Mango\"             \"Mulberry\"          \"Nectarine\"        \n[52] \"Nut\"               \"Olive\"             \"Orange\"           \n[55] \"Pamelo\"            \"Papaya\"            \"Passionfruit\"     \n[58] \"Peach\"             \"Pear\"              \"Persimmon\"        \n[61] \"Physalis\"          \"Pineapple\"         \"Plum\"             \n[64] \"Pomegranate\"       \"Pomelo\"            \"Purple mangosteen\"\n[67] \"Quince\"            \"Raisin\"            \"Rambutan\"         \n[70] \"Raspberry\"         \"Redcurrant\"        \"Rock melon\"       \n[73] \"Salal berry\"       \"Satsuma\"           \"Star fruit\"       \n[76] \"Strawberry\"        \"Tamarillo\"         \"Tangerine\"        \n[79] \"Ugli fruit\"        \"Watermelon\"       \n```\n\n\n:::\n\n```{.r .cell-code}\nstr_to_title(fruit)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"Apple\"             \"Apricot\"           \"Avocado\"          \n [4] \"Banana\"            \"Bell Pepper\"       \"Bilberry\"         \n [7] \"Blackberry\"        \"Blackcurrant\"      \"Blood Orange\"     \n[10] \"Blueberry\"         \"Boysenberry\"       \"Breadfruit\"       \n[13] \"Canary Melon\"      \"Cantaloupe\"        \"Cherimoya\"        \n[16] \"Cherry\"            \"Chili Pepper\"      \"Clementine\"       \n[19] \"Cloudberry\"        \"Coconut\"           \"Cranberry\"        \n[22] \"Cucumber\"          \"Currant\"           \"Damson\"           \n[25] \"Date\"              \"Dragonfruit\"       \"Durian\"           \n[28] \"Eggplant\"          \"Elderberry\"        \"Feijoa\"           \n[31] \"Fig\"               \"Goji Berry\"        \"Gooseberry\"       \n[34] \"Grape\"             \"Grapefruit\"        \"Guava\"            \n[37] \"Honeydew\"          \"Huckleberry\"       \"Jackfruit\"        \n[40] \"Jambul\"            \"Jujube\"            \"Kiwi Fruit\"       \n[43] \"Kumquat\"           \"Lemon\"             \"Lime\"             \n[46] \"Loquat\"            \"Lychee\"            \"Mandarine\"        \n[49] \"Mango\"             \"Mulberry\"          \"Nectarine\"        \n[52] \"Nut\"               \"Olive\"             \"Orange\"           \n[55] \"Pamelo\"            \"Papaya\"            \"Passionfruit\"     \n[58] \"Peach\"             \"Pear\"              \"Persimmon\"        \n[61] \"Physalis\"          \"Pineapple\"         \"Plum\"             \n[64] \"Pomegranate\"       \"Pomelo\"            \"Purple Mangosteen\"\n[67] \"Quince\"            \"Raisin\"            \"Rambutan\"         \n[70] \"Raspberry\"         \"Redcurrant\"        \"Rock Melon\"       \n[73] \"Salal Berry\"       \"Satsuma\"           \"Star Fruit\"       \n[76] \"Strawberry\"        \"Tamarillo\"         \"Tangerine\"        \n[79] \"Ugli Fruit\"        \"Watermelon\"       \n```\n\n\n:::\n:::\n",
    "supporting": [
      "20_strings_answers_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}