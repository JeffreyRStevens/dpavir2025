{
  "hash": "d539f22ead478dbfaaab491396491532",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Selecting columns\"\nauthor: \"Jeff Stevens\"\ndate: \"2025-02-12\"\ndate-format: iso\nexecute:\n  echo: true\n  freeze: auto\nformat:\n  revealjs: \n    theme: custom.scss\n    slide-number: true\n    code-line-numbers: false\n    highlight-style: github\n    code-overflow: wrap\n    footer: \"[DPaViR 2025](https://jeffreyrstevens.quarto.pub/dpavir)\"\n    code-link: true\n---\n\n\n\n# Review\n\n## Mental model of data analysis\n\n![](../images/data_analysis_workflow.png){fig-align=\"center\"}\n\n\n## Data wrangling\n\n[{dplyr}](https://dplyr.tidyverse.org)\n\n![](../images/dplyr_wrangling_allisonhorst.png){fig-align=\"center\" width=\"55%\"}\n\n![](../images/dplyr_hex.png){.absolute width=\"15%\" top=\"-5%\" left=\"85%\"}\n\n:::{.aside}\nSource: <a href = \"https://github.com/allisonhorst/stats-illustrations\">Allison Horst</a>\n:::\n\n\n---\n\n## Data wrangling\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\n```\n:::\n\n\n\n![](../images/dplyr_summary.png){fig-align=center width=80%}\n\n![](../images/dplyr_hex.png){.absolute width=\"15%\" top=\"-5%\" left=\"85%\"}\n\n\n# Selecting columns\n\n## Mental model of selecting columns\n\n![](../images/mentalmodel_select.png){fig-align=\"center\"}\n\n\n---\n\n## Data set\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(nycflights13)\nglimpse(flights)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```{style='font-size: 52%'}\nRows: 336,776\nColumns: 19\n$ year           <int> 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2…\n$ month          <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ day            <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ dep_time       <int> 517, 533, 542, 544, 554, 554, 555, 557, 557, 558, 558, …\n$ sched_dep_time <int> 515, 529, 540, 545, 600, 558, 600, 600, 600, 600, 600, …\n$ dep_delay      <dbl> 2, 4, 2, -1, -6, -4, -5, -3, -3, -2, -2, -2, -2, -2, -1…\n$ arr_time       <int> 830, 850, 923, 1004, 812, 740, 913, 709, 838, 753, 849,…\n$ sched_arr_time <int> 819, 830, 850, 1022, 837, 728, 854, 723, 846, 745, 851,…\n$ arr_delay      <dbl> 11, 20, 33, -18, -25, 12, 19, -14, -8, 8, -2, -3, 7, -1…\n$ carrier        <chr> \"UA\", \"UA\", \"AA\", \"B6\", \"DL\", \"UA\", \"B6\", \"EV\", \"B6\", \"…\n$ flight         <int> 1545, 1714, 1141, 725, 461, 1696, 507, 5708, 79, 301, 4…\n$ tailnum        <chr> \"N14228\", \"N24211\", \"N619AA\", \"N804JB\", \"N668DN\", \"N394…\n$ origin         <chr> \"EWR\", \"LGA\", \"JFK\", \"JFK\", \"LGA\", \"EWR\", \"EWR\", \"LGA\",…\n$ dest           <chr> \"IAH\", \"IAH\", \"MIA\", \"BQN\", \"ATL\", \"ORD\", \"FLL\", \"IAD\",…\n$ air_time       <dbl> 227, 227, 160, 183, 116, 150, 158, 53, 140, 138, 149, 1…\n$ distance       <dbl> 1400, 1416, 1089, 1576, 762, 719, 1065, 229, 944, 733, …\n$ hour           <dbl> 5, 5, 5, 5, 6, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 5, 6, 6, 6…\n$ minute         <dbl> 15, 29, 40, 45, 0, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 59, 0…\n$ time_hour      <dttm> 2013-01-01 05:00:00, 2013-01-01 05:00:00, 2013-01-01 0…\n```\n\n\n:::\n:::\n\n\n\n\n\n---\n\n## Selecting columns\n\n### `select()`\n\n![](../images/dplyr_select.png){fig-align=\"center\" width=\"40%\"}\n\n:::{.fragment}\n:::{.callout-warning}\n# Note\nNotice that column names are not in quotes in the tidyverse\n:::\n:::\n\n\n---\n\n## Selecting columns\n\n### `select()` by inclusion\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nselect(flights, year, month, day, sched_dep_time, sched_arr_time)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 336,776 × 5\n    year month   day sched_dep_time sched_arr_time\n   <int> <int> <int>          <int>          <int>\n 1  2013     1     1            515            819\n 2  2013     1     1            529            830\n 3  2013     1     1            540            850\n 4  2013     1     1            545           1022\n 5  2013     1     1            600            837\n 6  2013     1     1            558            728\n 7  2013     1     1            600            854\n 8  2013     1     1            600            723\n 9  2013     1     1            600            846\n10  2013     1     1            600            745\n# ℹ 336,766 more rows\n```\n\n\n:::\n:::\n\n\n\n\n---\n\n## Selecting columns\n\n### `select()` by exclusion\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nselect(flights, !c(dep_time, dep_delay, arr_time, arr_delay, carrier, flight, tailnum,\n       origin, dest, air_time, distance, hour, minute, time_hour))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 336,776 × 5\n    year month   day sched_dep_time sched_arr_time\n   <int> <int> <int>          <int>          <int>\n 1  2013     1     1            515            819\n 2  2013     1     1            529            830\n 3  2013     1     1            540            850\n 4  2013     1     1            545           1022\n 5  2013     1     1            600            837\n 6  2013     1     1            558            728\n 7  2013     1     1            600            854\n 8  2013     1     1            600            723\n 9  2013     1     1            600            846\n10  2013     1     1            600            745\n# ℹ 336,766 more rows\n```\n\n\n:::\n:::\n\n\n\n\n---\n\n## Helper functions\n\n### Collections of functions to facilitate selecting columns\n\n:::{.callout-warning}\nThese helper functions only apply inside [{dplyr}](https://dplyr.tidyverse.org) or other tidyverse functions that use `select()`.\n:::\n\n\n## Helper functions\n\n### Select consecutive columns with `:` \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nselect(flights, year:day, hour, time_hour)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 336,776 × 5\n    year month   day  hour time_hour          \n   <int> <int> <int> <dbl> <dttm>             \n 1  2013     1     1     5 2013-01-01 05:00:00\n 2  2013     1     1     5 2013-01-01 05:00:00\n 3  2013     1     1     5 2013-01-01 05:00:00\n 4  2013     1     1     5 2013-01-01 05:00:00\n 5  2013     1     1     6 2013-01-01 06:00:00\n 6  2013     1     1     5 2013-01-01 05:00:00\n 7  2013     1     1     6 2013-01-01 06:00:00\n 8  2013     1     1     6 2013-01-01 06:00:00\n 9  2013     1     1     6 2013-01-01 06:00:00\n10  2013     1     1     6 2013-01-01 06:00:00\n# ℹ 336,766 more rows\n```\n\n\n:::\n:::\n\n\n\n\n---\n\n## Helper functions\n\n### Select everything else with `everything()`\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nselect(flights, time_hour, air_time, everything())\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 336,776 × 19\n   time_hour           air_time  year month   day dep_time sched_dep_time\n   <dttm>                 <dbl> <int> <int> <int>    <int>          <int>\n 1 2013-01-01 05:00:00      227  2013     1     1      517            515\n 2 2013-01-01 05:00:00      227  2013     1     1      533            529\n 3 2013-01-01 05:00:00      160  2013     1     1      542            540\n 4 2013-01-01 05:00:00      183  2013     1     1      544            545\n 5 2013-01-01 06:00:00      116  2013     1     1      554            600\n 6 2013-01-01 05:00:00      150  2013     1     1      554            558\n 7 2013-01-01 06:00:00      158  2013     1     1      555            600\n 8 2013-01-01 06:00:00       53  2013     1     1      557            600\n 9 2013-01-01 06:00:00      140  2013     1     1      557            600\n10 2013-01-01 06:00:00      138  2013     1     1      558            600\n# ℹ 336,766 more rows\n# ℹ 12 more variables: dep_delay <dbl>, arr_time <int>, sched_arr_time <int>,\n#   arr_delay <dbl>, carrier <chr>, flight <int>, tailnum <chr>, origin <chr>,\n#   dest <chr>, distance <dbl>, hour <dbl>, minute <dbl>\n```\n\n\n:::\n:::\n\n\n\n\n---\n\n## Helper functions\n\n### Select columns containing specific text with `contains()`\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nselect(flights, contains(\"_time\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 336,776 × 5\n   dep_time sched_dep_time arr_time sched_arr_time air_time\n      <int>          <int>    <int>          <int>    <dbl>\n 1      517            515      830            819      227\n 2      533            529      850            830      227\n 3      542            540      923            850      160\n 4      544            545     1004           1022      183\n 5      554            600      812            837      116\n 6      554            558      740            728      150\n 7      555            600      913            854      158\n 8      557            600      709            723       53\n 9      557            600      838            846      140\n10      558            600      753            745      138\n# ℹ 336,766 more rows\n```\n\n\n:::\n:::\n\n\n\n\n---\n\n## Helper functions\n\n### Select columns starting or ending with text with `starts_with()` or `ends_with()`\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nselect(flights, starts_with(\"dep_\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 336,776 × 2\n   dep_time dep_delay\n      <int>     <dbl>\n 1      517         2\n 2      533         4\n 3      542         2\n 4      544        -1\n 5      554        -6\n 6      554        -4\n 7      555        -5\n 8      557        -3\n 9      557        -3\n10      558        -2\n# ℹ 336,766 more rows\n```\n\n\n:::\n:::\n\n\n\n\n\n# Moving columns\n\n## Move with `select()`\n\n![](../images/dplyr_select_move.png){fig-align=\"center\" height=\"55%\"}\n\n\n---\n\n## Move with `select()`\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nselect(flights, carrier, flight, year:day)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 336,776 × 5\n   carrier flight  year month   day\n   <chr>    <int> <int> <int> <int>\n 1 UA        1545  2013     1     1\n 2 UA        1714  2013     1     1\n 3 AA        1141  2013     1     1\n 4 B6         725  2013     1     1\n 5 DL         461  2013     1     1\n 6 UA        1696  2013     1     1\n 7 B6         507  2013     1     1\n 8 EV        5708  2013     1     1\n 9 B6          79  2013     1     1\n10 AA         301  2013     1     1\n# ℹ 336,766 more rows\n```\n\n\n:::\n:::\n\n\n\n\n---\n\n## Move with `relocate()`\n\n![](../images/dplyr_relocate.png){fig-align=\"center\" height=\"55%\"}\n\n\n---\n\n## Move with `relocate()`\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrelocate(flights, carrier, flight, .before = year)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```{style='font-size: 52%'}\n# A tibble: 336,776 × 19\n   carrier flight  year month   day dep_time sched_dep_time dep_delay arr_time\n   <chr>    <int> <int> <int> <int>    <int>          <int>     <dbl>    <int>\n 1 UA        1545  2013     1     1      517            515         2      830\n 2 UA        1714  2013     1     1      533            529         4      850\n 3 AA        1141  2013     1     1      542            540         2      923\n 4 B6         725  2013     1     1      544            545        -1     1004\n 5 DL         461  2013     1     1      554            600        -6      812\n 6 UA        1696  2013     1     1      554            558        -4      740\n 7 B6         507  2013     1     1      555            600        -5      913\n 8 EV        5708  2013     1     1      557            600        -3      709\n 9 B6          79  2013     1     1      557            600        -3      838\n10 AA         301  2013     1     1      558            600        -2      753\n# ℹ 336,766 more rows\n# ℹ 10 more variables: sched_arr_time <int>, arr_delay <dbl>, tailnum <chr>,\n#   origin <chr>, dest <chr>, air_time <dbl>, distance <dbl>, hour <dbl>,\n#   minute <dbl>, time_hour <dttm>\n```\n\n\n:::\n:::\n\n\n\n\n# Renaming columns\n\n## Rename with `select()`\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nselect(flights, airline = carrier, flight_num = flight, everything())\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 336,776 × 19\n   airline flight_num  year month   day dep_time sched_dep_time dep_delay\n   <chr>        <int> <int> <int> <int>    <int>          <int>     <dbl>\n 1 UA            1545  2013     1     1      517            515         2\n 2 UA            1714  2013     1     1      533            529         4\n 3 AA            1141  2013     1     1      542            540         2\n 4 B6             725  2013     1     1      544            545        -1\n 5 DL             461  2013     1     1      554            600        -6\n 6 UA            1696  2013     1     1      554            558        -4\n 7 B6             507  2013     1     1      555            600        -5\n 8 EV            5708  2013     1     1      557            600        -3\n 9 B6              79  2013     1     1      557            600        -3\n10 AA             301  2013     1     1      558            600        -2\n# ℹ 336,766 more rows\n# ℹ 11 more variables: arr_time <int>, sched_arr_time <int>, arr_delay <dbl>,\n#   tailnum <chr>, origin <chr>, dest <chr>, air_time <dbl>, distance <dbl>,\n#   hour <dbl>, minute <dbl>, time_hour <dttm>\n```\n\n\n:::\n:::\n\n\n\n\n---\n\n## Rename with `rename()`\n\n![](../images/dplyr_rename.png){fig-align=\"center\" height=\"55%\"}\n\n\n---\n\n## Rename with `rename()`\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrename(flights, departure = dep_time, arrival = arr_time)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```{style='font-size: 52%'}\n# A tibble: 336,776 × 19\n    year month   day departure sched_dep_time dep_delay arrival sched_arr_time\n   <int> <int> <int>     <int>          <int>     <dbl>   <int>          <int>\n 1  2013     1     1       517            515         2     830            819\n 2  2013     1     1       533            529         4     850            830\n 3  2013     1     1       542            540         2     923            850\n 4  2013     1     1       544            545        -1    1004           1022\n 5  2013     1     1       554            600        -6     812            837\n 6  2013     1     1       554            558        -4     740            728\n 7  2013     1     1       555            600        -5     913            854\n 8  2013     1     1       557            600        -3     709            723\n 9  2013     1     1       557            600        -3     838            846\n10  2013     1     1       558            600        -2     753            745\n# ℹ 336,766 more rows\n# ℹ 11 more variables: arr_delay <dbl>, carrier <chr>, flight <int>,\n#   tailnum <chr>, origin <chr>, dest <chr>, air_time <dbl>, distance <dbl>,\n#   hour <dbl>, minute <dbl>, time_hour <dttm>\n```\n\n\n:::\n:::\n\n\n\n\n## Mental model of selecting columns\n\n![](../images/mentalmodel_select.png){fig-align=\"center\"}\n\n\n## Let's code!\n\n[Selecting data](../code/10_selecting.html){target=\"_blank\"} [[Rmd](../code/10_selecting.Rmd){target=\"_blank\"}]\n",
    "supporting": [
      "10_selecting_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}